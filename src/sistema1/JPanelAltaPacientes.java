/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sistema1;

import java.awt.GridLayout;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import Reportes.Reportes;

/**
 *
 * @author Anytonio R. Notario
 */
public class JPanelAltaPacientes extends javax.swing.JPanel {

    ConexionDBOriginal con2 = new ConexionDBOriginal();
    
    Funciones fn = new Funciones();
    JPanelConsulta JPC = new JPanelConsulta();
    Reportes rp = new Reportes();
//conexionDB con = new conexionDB();
    DefaultTableModel dtm;

    public String param = "";

    SimpleDateFormat formatoPrueba = new SimpleDateFormat("dd/MM/yyyy");
    public JPanelAltaPacientes() {
        initComponents();
        llenacombo();
        txtExped.setText(Integer.toString(ultimoRegistro()));
        jDateChooser1.setDate(cargafecha());
        jDateChooser3.setDate(cargafecha());
        jButton1.setVisible(false);
        jTable1.setFont(new java.awt.Font("Tahoma", 0, 14));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MenuTabaDatos = new javax.swing.JPopupMenu();
        VerConsulta = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        VerTodo = new javax.swing.JMenuItem();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtExped = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtApes = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        txtCalle = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtCel = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel10 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jPanelHConsultas = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        txtGestas = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtAbortos = new javax.swing.JTextField();
        txtCesareas = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txtPartos = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jPaneDatosMedicine = new javax.swing.JPanel();
        txtpoblacion = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jDateChooser3 = new com.toedter.calendar.JDateChooser();
        jRadioFeminazi = new javax.swing.JRadioButton();
        jRadioMen = new javax.swing.JRadioButton();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();

        MenuTabaDatos.setComponentPopupMenu(MenuTabaDatos);

        VerConsulta.setText("Ver Datos Consulta");
        VerConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VerConsultaActionPerformed(evt);
            }
        });
        MenuTabaDatos.add(VerConsulta);
        MenuTabaDatos.add(jSeparator1);

        VerTodo.setText("Ver Consulta/Receta");
        VerTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VerTodoActionPerformed(evt);
            }
        });
        MenuTabaDatos.add(VerTodo);

        setBackground(new java.awt.Color(245, 244, 243));
        setPreferredSize(new java.awt.Dimension(910, 658));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("DATOS DEL PACIENTE");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 250, 30));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel3.setText("FECHA:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 30, 50, 30));

        txtExped.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        add(txtExped, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 30, 70, 35));

        txtNombre.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 70, 330, 35));

        txtApes.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        add(txtApes, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 110, 330, 35));

        jComboBox1.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jComboBox1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 150, 130, 35));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel8.setText("E. CIVIL:");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 150, 60, 30));

        txtCalle.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        add(txtCalle, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 190, 330, 35));

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel11.setText("CELULAR:");
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 310, 80, 30));

        txtCel.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        add(txtCel, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 310, 120, 35));
        add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 350, 140, -1));
        add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 350, 150, 10));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel10.setText("SEXO:");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, 90, 30));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel9.setText("POBLACION:");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, 90, 30));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel7.setText("FECHA NACIM:");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 90, 30));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel5.setText("APELLIDOS:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 90, 30));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel4.setText("NOMBRE(S):");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 90, 30));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel2.setText("EXPEDIENTE:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 90, 30));

        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/trash32px.png"))); // NOI18N
        jLabel14.setToolTipText("Eliminar Paciente");
        jLabel14.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel14MouseClicked(evt);
            }
        });
        add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 400, 50, 50));

        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/save32x32.png"))); // NOI18N
        jLabel19.setToolTipText("Gurardar/Actualizar Informacion");
        jLabel19.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel19.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel19MouseClicked(evt);
            }
        });
        add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 350, 50, 50));

        jPanelHConsultas.setBackground(new java.awt.Color(255, 255, 225));
        jPanelHConsultas.setPreferredSize(new java.awt.Dimension(455, 375));
        jPanelHConsultas.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel15.setText("GESTAS:");
        jPanelHConsultas.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 90, 30));

        txtGestas.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jPanelHConsultas.add(txtGestas, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 10, 80, 35));

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel16.setText("ABORTOS:");
        jPanelHConsultas.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 10, 80, 30));

        txtAbortos.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jPanelHConsultas.add(txtAbortos, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 10, 80, 35));

        txtCesareas.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jPanelHConsultas.add(txtCesareas, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 50, 80, 35));

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel18.setText("CESAREAS:");
        jPanelHConsultas.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 50, 80, 30));

        txtPartos.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jPanelHConsultas.add(txtPartos, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 50, 80, 35));

        jLabel24.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel24.setText("PARTOS:");
        jPanelHConsultas.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 90, 30));

        add(jPanelHConsultas, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 360, 370, 90));

        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/exit.png"))); // NOI18N
        jLabel22.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel22MouseClicked(evt);
            }
        });
        add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 0, 30, 30));

        jPaneDatosMedicine.setBackground(new java.awt.Color(245, 244, 243));
        jPaneDatosMedicine.setPreferredSize(new java.awt.Dimension(455, 658));
        jPaneDatosMedicine.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        add(jPaneDatosMedicine, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 0, -1, -1));

        txtpoblacion.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        add(txtpoblacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 230, 330, 35));

        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel23.setText("CALLE:");
        add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, 90, 30));

        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/IconReceta.png"))); // NOI18N
        jLabel20.setToolTipText("Nueva Consulta");
        jLabel20.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel20.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel20MouseClicked(evt);
            }
        });
        add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 450, 50, 50));

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jButton1.setText("IMPRIMIR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 450, 110, 40));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.setComponentPopupMenu(MenuTabaDatos);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable1MousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 510, 450, 140));

        jDateChooser3.setDateFormatString("dd/MM/yyyy");
        jDateChooser3.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        add(jDateChooser3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 150, 160, 35));

        buttonGroup1.add(jRadioFeminazi);
        jRadioFeminazi.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jRadioFeminazi.setText("FEMENINO");
        jRadioFeminazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioFeminaziActionPerformed(evt);
            }
        });
        add(jRadioFeminazi, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 270, 110, 30));

        buttonGroup1.add(jRadioMen);
        jRadioMen.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jRadioMen.setText("MASCULINO");
        jRadioMen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioMenActionPerformed(evt);
            }
        });
        add(jRadioMen, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 270, 120, 30));

        jDateChooser1.setDateFormatString("dd-MM-yyyy");
        jDateChooser1.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        add(jDateChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 30, 150, 35));
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel19MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel19MouseClicked
        Connection cn = con2.conexion();
        String exped,fech,nomb,apes,fechNac,edad,civil,calle,poblacion,tel="/",cel,gestas,abortos,partos,cesareas,SQL="";
        
        String[] arr = null;
// Letrero de prueba        JOptionPane.showMessageDialog(null, "fecha: "+fech);
        exped = txtExped.getText();//expediente
        fech = fn.getFecha(jDateChooser1);//fecha
        nomb = txtNombre.getText();//nombre
        apes = txtApes.getText();//paterno
        
        fechNac = fn.getFecha(jDateChooser3);
      //  edad=txtEdad.getText();//edad
        civil = jComboBox1.getSelectedItem().toString();//civil
        calle =txtCalle.getText();//direccion
        poblacion = txtpoblacion.getText();
        
        if(jRadioFeminazi.isSelected())
            tel = "F";
        else{
            tel="M";
        }
        cel = txtCel.getText();//cel

        gestas = txtGestas.getText();//gestas
        abortos = txtAbortos.getText();//abortos
        partos = txtPartos.getText();//partos
        cesareas = txtCesareas.getText();//cesareas

        arr = fn.DevuelveID(0, civil, 0);
        
        PreparedStatement pps=null;

        if(exped.isEmpty() || nomb.isEmpty())
            JOptionPane.showMessageDialog(null,"Nombre ó Apellido vacio");
        else{
            
            if(fn.ValidaExpedienteBool(exped))
            {
                SQL="UPDATE t_personales SET expediente='"+exped+"' ,fecha='"+fech+"',nombre='"+nomb+"',apellidos='"+apes+"',edad='"+
                fechNac+"',estadocivil='"+arr[0]+"',calle='"+calle+"',poblacion='"+poblacion+"',telefono='"+tel+"',celular='"+cel+"',gestas='"+
                gestas+"',partos='"+partos+"',abortos='"+abortos+"',cesareas='"+cesareas+"' WHERE expediente = '"+exped+"'";
            
                try {
                        pps = cn.prepareStatement(SQL);

                    pps.executeUpdate();
                    JOptionPane.showMessageDialog(null, "Datos guardados");
                    jLabel20.setVisible(true);
                }catch (SQLException e){
                    Logger.getLogger(JPanelAltaPacientes.class.getName()).log(Level.SEVERE, null, e);
                }finally{
 //                   S.out.println( "cierra conexion a la base de datos" );    
                    try {
                        if(pps != null) pps.close();
                        if(cn != null) cn.close();
//                        if(cn !=null) cn.close();
                    } catch (SQLException ex) {
                        System.err.println( ex.getMessage() );    
                    }
                }
            }//if
            else{
                SQL="INSERT INTO t_personales (expediente,fecha,nombre,apellidos,edad,estadocivil,calle,poblacion,telefono,celular,gestas,partos,abortos,cesareas) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
 //               System.out.println(SQL);
            try {
                pps = cn.prepareStatement(SQL);
                pps.setString(1, exped);
                pps.setString(2, fech);
                pps.setString(3, nomb);
                pps.setString(4, apes);
                pps.setString(5, fechNac);
                pps.setInt(6, Integer.parseInt(arr[0]));
                pps.setString(7, calle);
                pps.setString(8, poblacion);
                
                if(!tel.isEmpty())
                    pps.setString(9, tel);
                else
                    pps.setString(9, "/");
                
                if(!cel.isEmpty())
                    pps.setString(10, cel);
                else
                    pps.setString(10, "/");

                
                if(!gestas.isEmpty())
                    pps.setString(11, gestas);
                else
                    pps.setString(11,"/");
                
                if(!abortos.isEmpty())
                    pps.setString(12, partos);
                else
                    pps.setString(12, "/");
                
                if(!partos.isEmpty())
                    pps.setString(13, abortos);
                else
                    pps.setString(13, "/");
                
                if(!cesareas.isEmpty())
                    pps.setString(14, cesareas);
                else
                    pps.setString(14, "/");

                pps.executeUpdate();

                JOptionPane.showMessageDialog(null, "Datos Guardados");

                limpiarCampos();
//                jPanelHConsultas.setVisible(true);
                jLabel20.setVisible(true);
            } catch (SQLException ex) {
                Logger.getLogger(JPanelAltaPacientes.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Error durante la transaccion");
            }finally{
 //               System.out.println( "cierra conexion a la base de datos" );    
                try {
                    if(pps != null) pps.close();                
                    if(cn !=null) cn.close();
                    } catch (SQLException ex) {
                        System.err.println( ex.getMessage() );    
                    }
            }
            
                realizaConsul(exped);
                jPanelHConsultas.setVisible(true);
                mostrarTabla2(exped);
            
        }
    }        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel19MouseClicked

    private void jLabel14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel14MouseClicked
        Connection cn = con2.conexion();
        PreparedStatement preparedStmt = null;
        String var=txtExped.getText();
        if(!var.isEmpty()){

            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog (null, "Seguro que desea eliminar al paciente:"+var,"Borrar",dialogButton);
            if(dialogResult == JOptionPane.YES_OPTION){
            try {
            String query = "delete from t_personales where expediente = '"+var+"' ";
            preparedStmt = cn.prepareStatement(query);
            preparedStmt.execute();
      
            JOptionPane.showMessageDialog(null, "Eliminado");

            limpiarCampos();

        } catch (SQLException ex) {
            Logger.getLogger(RespInicioFrame.class.getName()).log(Level.SEVERE, null, ex);
        }finally{
//            System.out.println("cierra conexion a la base de datos");    
            try {
                if(preparedStmt != null) preparedStmt.close();                
                if(cn !=null) cn.close();
            } catch (SQLException ex) {
                System.err.println(ex.getMessage()); 
//                System.out.println("Error al cerrar la conexon");
            }//catch
        }//finally 
            } else {
                JOptionPane.showMessageDialog(null,"No se borro el Expediente:"+var);
            }
        }else
            JOptionPane.showMessageDialog(null,"no selecciono nada");
    }//GEN-LAST:event_jLabel14MouseClicked

    private void jLabel22MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel22MouseClicked
        this.setVisible(false);
    }//GEN-LAST:event_jLabel22MouseClicked

    private void VerConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VerConsultaActionPerformed
        int fila = jTable1.getSelectedRow();
        String var="";
        
        if(fila >= 0)
        {
            fn.limpiar(jPaneDatosMedicine);
            jPaneDatosMedicine.setVisible(true);
//Pone invisible el panel de receta
            
            var=jTable1.getValueAt(fila, 0).toString();
            JPC.setEnabled(true);
            JPC.setVisible(true);
            
            JPC.RealizaConsulta(var);
            JPC.jPanelReceta.setVisible(false);
            
            jPaneDatosMedicine.setLayout(new GridLayout(1,1));
            jPaneDatosMedicine.add(JPC);
            jPaneDatosMedicine.validate();
            jPaneDatosMedicine.setVisible(true);
            jPaneDatosMedicine.setEnabled(true);
        }else{
            JOptionPane.showMessageDialog(null,"Seleccione un paciente.");
        }
    }//GEN-LAST:event_VerConsultaActionPerformed

    private void VerTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VerTodoActionPerformed
        int fila = jTable1.getSelectedRow();
        String var="";
        
        if(fila >= 0)
        {
            fn.limpiar(jPaneDatosMedicine);
            jPaneDatosMedicine.setVisible(true);
            
            var=jTable1.getValueAt(fila, 0).toString();
            JPC.setEnabled(true);
            JPC.setVisible(true);
            
            JPC.jLabelGuardaReceta.setVisible(false);
            JPC.jLabelLlenaTabla.setVisible(false);

            JPC.jLabelPDF.setVisible(true);
            
            JPC.RealizaConsulta(var);
            JPC.ConsultaReceta(var);
            JPC.txtId_Consul.setText(var);
            
    //Prueba de buscabolena
            JPC.txtIDConsulta.setText(var);
            JPC.id_Consulta = var;
            
            jPaneDatosMedicine.setLayout(new GridLayout(1,1));
            jPaneDatosMedicine.add(JPC);
            jPaneDatosMedicine.validate();
            jPaneDatosMedicine.setVisible(true);
            jPaneDatosMedicine.setEnabled(true);
            
        }else{
            JOptionPane.showMessageDialog(null,"Seleccione un paciente.");
        }        // TODO add your handling code here:
    }//GEN-LAST:event_VerTodoActionPerformed

    private void jLabel20MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel20MouseClicked
            String var =txtExped.getText();
        //    String var2 = txtFUR.getText();
            
            DateFormat tx = new SimpleDateFormat("dd/MM/yyyy");
            
            Date fech = new Date();
            Calendar cal  = Calendar.getInstance();
            Calendar cal2 = Calendar.getInstance();
            
            jPaneDatosMedicine.setVisible(true);
            fn.limpiar(jPaneDatosMedicine);
            
            JPC.setVisible(true);
            JPC.jPanelReceta.setVisible(false);
            
            JPC.jLabelAbreReceta.setVisible(false);
    //llenas combos
            JPC.llenacomboMedicamento();
            JPC.llenacomboTratamiento();
            
            jPaneDatosMedicine.setLayout(new GridLayout(1,1));

            jPaneDatosMedicine.add(JPC);

            jPaneDatosMedicine.validate();
            jPaneDatosMedicine.setVisible(true);
            jPaneDatosMedicine.setEnabled(true);
                
            JPC.txtExpCM.setText(var);

            JPC.txtfecConsultaActual.setText(fn.setDateActual());
            cal.setTime(fech);            
            JPC.dateChooserCombo1.setSelectedDate(cal);
        //    JPC.dateChooserCombo3.setSelectedDate(cal);
            
            JPC.limpiaCampos();
            mostrarTabla2(var);
    }//GEN-LAST:event_jLabel20MouseClicked

    private void jTable1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MousePressed
    if (evt.getClickCount() > 1)
        {
        int fila = jTable1.getSelectedRow();
        String var="";
        if(fila >= 0)
        {
            fn.limpiar(jPaneDatosMedicine);
            jPaneDatosMedicine.setVisible(true);
            var=jTable1.getValueAt(fila, 0).toString();
            JPC.setEnabled(true);
            JPC.setVisible(true);
            JPC.jLabelGuardaReceta.setVisible(false);
            JPC.jLabelLlenaTabla.setVisible(false);

            JPC.jLabelPDF.setVisible(true);
            
            JPC.RealizaConsulta(var);
            JPC.ConsultaReceta(var);
            JPC.txtId_Consul.setText(var);
            
    //Prueba de buscabolena
            JPC.txtIDConsulta.setText(var);
            JPC.id_Consulta = var;
            
            jPaneDatosMedicine.setLayout(new GridLayout(1,1));
            jPaneDatosMedicine.add(JPC);
            jPaneDatosMedicine.validate();
            jPaneDatosMedicine.setVisible(true);
            jPaneDatosMedicine.setEnabled(true);
            
        }else{
            JOptionPane.showMessageDialog(null,"Seleccione un paciente.");
        }
    }
    }//GEN-LAST:event_jTable1MousePressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String nom = txtNombre.getText();
        if(nom.isEmpty()){
            JOptionPane.showMessageDialog(null, "Campo Nombre vacio");
        }else{
            rp.ReportePaciente(txtExped.getText());        
        }            
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jRadioFeminaziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioFeminaziActionPerformed
        if(jRadioFeminazi.isSelected()){
            jPanelHConsultas.setVisible(true);
        }
    }//GEN-LAST:event_jRadioFeminaziActionPerformed

    private void jRadioMenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioMenActionPerformed
        if(jRadioMen.isSelected()){
            jPanelHConsultas.setVisible(false);
        }
    }//GEN-LAST:event_jRadioMenActionPerformed

    public void limpiarCampos(){
        txtExped.setText(Integer.toString(ultimoRegistro()));
        txtNombre.setText("");
        txtApes.setText("");
        txtCel.setText("");
        txtCalle.setText("");
        txtpoblacion.setText("");       
        txtAbortos.setText("");
        txtCesareas.setText("");
        txtGestas.setText("");
        txtPartos.setText("");
        jDateChooser1.setDate(cargafecha());
        jDateChooser3.setDate(cargafecha());
        llenacombo();
    }

    private Date cargafecha(){
        Date fechaAct = new Date();
        return fechaAct;
    }

    void llenacombo(){
        Connection cn = con2.conexion();
        jComboBox1.removeAllItems();
        String consul = "SELECT nombre from c_estadosciviles ORDER BY nombre ASC";
        int i = 1;
        Statement st = null;
        ResultSet rs = null;
        try {
            st = cn.createStatement();
            rs = st.executeQuery(consul);
            while(rs.next()){
                jComboBox1.addItem(rs.getString(i));
            }
        } catch (SQLException ex) {
            Logger.getLogger(JPanelAltaPacientes.class.getName()).log(Level.SEVERE, null, ex);
        }finally{
                    try {
                        if(st != null) st.close();
                        if(cn != null) cn.close();
                    } catch (SQLException ex) {
                        System.err.println( ex.getMessage() );    
                    }
                }
    }
            
    private int ultimoRegistro(){
        Connection cn = con2.conexion();
        String ultimo="";
        int num=0;
        String sql = "SELECT expediente FROM t_personales ORDER BY expediente DESC LIMIT 1";//SELECT expediente FROM t_personales
        Statement st = null;
        ResultSet rs= null;
        try {
            st = cn.createStatement();
            rs = st.executeQuery(sql);
            while(rs.next())
            {
                ultimo = rs.getString(1);
            }
        } catch (SQLException ex) {
            Logger.getLogger(RespInicioFrame.class.getName()).log(Level.SEVERE, null, ex);
        }finally{
 //                   System.out.println( "cierra conexion a la base de datos" );    
                    try {
                        if(st != null) st.close();
                        if(cn != null) cn.close();
//                        if(cn !=null) cn.close();
                    } catch (SQLException ex) {
                        System.err.println( ex.getMessage() );    
                    }
                }
        num=Integer.parseInt(ultimo);
        
        return num+1;
    }
    
    public void mostrarTabla2(String var){
        Connection cn = con2.conexion();
        DefaultTableModel modelo = new DefaultTableModel(){ 
            @Override
            public boolean isCellEditable (int fila, int columna) {
                return false;
            }
        };
        TableColumn columna, columna1;
        String consul = ""; 

        modelo.addColumn("ID");
        modelo.addColumn("EXPEDIENTE");
        modelo.addColumn("FECHA");
        
        jTable1.setModel(modelo);
        columna = jTable1.getColumn("ID");
        columna1 = jTable1.getColumn("EXPEDIENTE");
        
        columna.setPreferredWidth(5);
        columna1.setPreferredWidth(5);
        
        

        consul = "SELECT id_consultas, expediente, fecha FROM t_consultas WHERE expediente = "+var+"";
        
//        System.out.println("Consulta: "+consul);
        String datos[] =  new String[3];
        Statement st = null;
        ResultSet rs = null;
        try {
            st = cn.createStatement();
            rs = st.executeQuery(consul);
            while(rs.next()){
                datos[0] = rs.getString(1);
                datos[1] = rs.getString(2);
                datos[2] = formatoPrueba.format(rs.getDate(3));

                modelo.addRow(datos);
            }
            jTable1.setModel(modelo);
        } catch (SQLException ex) {
            Logger.getLogger(JPanelAltaPacientes.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    public void realizaConsul(String val){
        Connection cn = con2.conexion();
            String[] arr = null;
            String param="",sex="";
            
            String sql = "SELECT * FROM t_personales WHERE expediente = '"+val+"'";
            Statement st = null;
            ResultSet rs = null;
            
            try {
                st = cn.createStatement();
                rs = st.executeQuery(sql);
                
                while(rs.next())
                {
                    param=rs.getString(1);
                        txtExped.setText(param);
                        jDateChooser1.setDate(rs.getDate(2));
                        txtNombre.setText(rs.getString(3));
                        txtApes.setText(rs.getString(4));
                        jDateChooser3.setDate(rs.getDate(5));
                        arr = fn.DevuelveID(0, rs.getString((6)), 1);
                        jComboBox1.setSelectedItem(arr[1]);

                        txtCalle.setText(rs.getString(7));
                     
                        txtpoblacion.setText(rs.getString(8));
                        sex = rs.getString(9);
                        if(sex.equals("F")){
                            jRadioFeminazi.setSelected(true);
                            jPanelHConsultas.setVisible(true);
                        }else{
                            jRadioMen.setSelected(true);
                            jPanelHConsultas.setVisible(false);
                        }
                        
                        txtCel.setText(rs.getString(10));
                        
                        txtGestas.setText(rs.getString(11));
                        txtAbortos.setText(rs.getString(12));
                        txtPartos.setText(rs.getString(13));
                        txtCesareas.setText(rs.getString(14));
/*                    for(int x = 1;x <= rs.getMetaData().getColumnCount(); x++)
                        System.out.println("Datos -> "+rs.getString(x));
                        
*/
                    }
            } catch (SQLException ex) {
                Logger.getLogger(RespInicioFrame.class.getName()).log(Level.SEVERE, null, ex);
            }finally{
                
//             System.out.println("cierra conexion a la base de datos");    
             try {
                                
                 if(st != null) st.close();                
                 if(cn !=null) cn.close();
             } catch (SQLException ex) {
                 System.err.println(ex.getMessage()); 
//                 System.out.println("Error al cerrar la conexon");
             }
         }
            mostrarTabla2(val);
    }
    
        public void limpiatabla(){
        dtm = (DefaultTableModel) jTable1.getModel();
        int filas = dtm.getRowCount();
        int column = dtm.getColumnCount();
        for (int i = 0;filas>i; i++) {
            dtm.removeRow(0);
        }
    }
        
    private String ultimoRegistroFUR(String exp){
        Connection cn = con2.conexion();
        String ultimo="";
        int num=0;
        String sql = "SELECT fur FROM t_consultas WHERE expediente = "+exp+" ORDER BY id_consultas DESC LIMIT 1 ";//SELECT fur FROM t_consultas ORDER BY id_consultas DESC LIMIT 1
        Statement st = null;
        ResultSet rs= null;
        
        try {
            st = cn.createStatement();
            rs = st.executeQuery(sql);
            while(rs.next())
            {
                ultimo = rs.getString(1);
            }
        } catch (SQLException ex) {
            Logger.getLogger(JPanelAltaPacientes.class.getName()).log(Level.SEVERE, null, ex);
        }finally{
 //                   System.out.println( "cierra conexion a la base de datos" );    
                    try {
                        if(st != null) st.close();
                        if(cn != null) cn.close();
//                        if(cn !=null) cn.close();
                    } catch (SQLException ex) {
                        System.err.println( ex.getMessage() );    
                    }
                }
       return ultimo;
    }



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPopupMenu MenuTabaDatos;
    private javax.swing.JMenuItem VerConsulta;
    private javax.swing.JMenuItem VerTodo;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    public javax.swing.JComboBox<String> jComboBox1;
    public com.toedter.calendar.JDateChooser jDateChooser1;
    public com.toedter.calendar.JDateChooser jDateChooser3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    public javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    public javax.swing.JPanel jPaneDatosMedicine;
    public javax.swing.JPanel jPanelHConsultas;
    public javax.swing.JRadioButton jRadioFeminazi;
    public javax.swing.JRadioButton jRadioMen;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTable jTable1;
    public javax.swing.JTextField txtAbortos;
    public javax.swing.JTextField txtApes;
    public javax.swing.JTextField txtCalle;
    public javax.swing.JTextField txtCel;
    public javax.swing.JTextField txtCesareas;
    public javax.swing.JTextField txtExped;
    public javax.swing.JTextField txtGestas;
    public javax.swing.JTextField txtNombre;
    public javax.swing.JTextField txtPartos;
    public javax.swing.JTextField txtpoblacion;
    // End of variables declaration//GEN-END:variables
}
