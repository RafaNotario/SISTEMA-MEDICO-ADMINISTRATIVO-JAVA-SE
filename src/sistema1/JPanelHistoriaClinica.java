
package sistema1;

import Reportes.Reportes;
import static com.sun.org.apache.xalan.internal.lib.ExsltStrings.align;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import java.awt.Checkbox;
//import sistema1.ConexionDBOriginal;

public class JPanelHistoriaClinica extends javax.swing.JPanel {    
    ConexionDBOriginal con2 = new ConexionDBOriginal();
    Reportes rp = new Reportes();
    Funciones fn = new Funciones();
    String text1 = "<html><body><p>*Marcar todas las que apliquen y especificar <br>quien la ha padecido. </p></body></html>";
    String text2 = "<html><body><p>*Marcar todas las que apliquen y especificar. </p></body></html>";
    public String expediente = null;
    int param=0;
    
    //nuevo para agregar items checklisst
    private Checkbox checkBox1;
    private Checkbox checkBox2;
    private Checkbox checkBox3;
    private Checkbox checkBox4;
    
    public JPanelHistoriaClinica(int exped) {
        initComponents();
        cargaTexto(jLabeText1, text1);
        cargaTexto(jLabel5, text2);
        this.param=exped;
        llenacombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Baño = new javax.swing.ButtonGroup();
        LavDental = new javax.swing.ButtonGroup();
        Habitacion = new javax.swing.ButtonGroup();
        Inmunizaciones = new javax.swing.ButtonGroup();
        jScrollPane3 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtexpediente = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabeText1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        hepatopatia = new javax.swing.JCheckBox();
        endocrinas = new javax.swing.JCheckBox();
        hipertension = new javax.swing.JCheckBox();
        nefropatia = new javax.swing.JCheckBox();
        cancer = new javax.swing.JCheckBox();
        otrosHF = new javax.swing.JCheckBox();
        alergicas = new javax.swing.JCheckBox();
        mentales = new javax.swing.JCheckBox();
        cardiopatia = new javax.swing.JCheckBox();
        asma = new javax.swing.JCheckBox();
        Diabetes = new javax.swing.JCheckBox();
        JCBDiabetes = new javax.swing.JComboBox<>();
        JCBHepatopatia = new javax.swing.JComboBox<>();
        JCBAsma = new javax.swing.JComboBox<>();
        JCBEndocrinas = new javax.swing.JComboBox<>();
        JCBHipertension = new javax.swing.JComboBox<>();
        JCBNefropatia = new javax.swing.JComboBox<>();
        JCBCancer = new javax.swing.JComboBox<>();
        JCBCardiopatia = new javax.swing.JComboBox<>();
        JCBMentales = new javax.swing.JComboBox<>();
        JCBAlergicas = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtotrosHF = new javax.swing.JTextArea();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txttraumaticas = new javax.swing.JTextField();
        txtprevias = new javax.swing.JTextField();
        txtadicciones = new javax.swing.JTextField();
        txtotorsPErs = new javax.swing.JTextField();
        traumaticas = new javax.swing.JCheckBox();
        previas = new javax.swing.JCheckBox();
        adicciones = new javax.swing.JCheckBox();
        otorsPErs = new javax.swing.JCheckBox();
        txtalergias = new javax.swing.JTextField();
        txttransfusionales = new javax.swing.JTextField();
        txtquirurgicas = new javax.swing.JTextField();
        txtactuales = new javax.swing.JTextField();
        actuales = new javax.swing.JCheckBox();
        quirurgicas = new javax.swing.JCheckBox();
        transfusionales = new javax.swing.JCheckBox();
        alergias = new javax.swing.JCheckBox();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        habiturbana = new javax.swing.JCheckBox();
        habitrural = new javax.swing.JCheckBox();
        habittodos = new javax.swing.JCheckBox();
        habitletrina = new javax.swing.JCheckBox();
        jLabel13 = new javax.swing.JLabel();
        Baño3erdia = new javax.swing.JCheckBox();
        inmunizpendientes = new javax.swing.JCheckBox();
        Bañoirregular = new javax.swing.JCheckBox();
        BañoDiario = new javax.swing.JCheckBox();
        jLabel11 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtDescInmuniz = new javax.swing.JTextField();
        inmunizComplete = new javax.swing.JCheckBox();
        deportes = new javax.swing.JCheckBox();
        jLabel17 = new javax.swing.JLabel();
        txtdeportes = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txtalimentacion = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtAñosTabaq = new javax.swing.JTextField();
        txtDiaTabaq = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        tabaquismo = new javax.swing.JCheckBox();
        txtrecAlcohol = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtAñosAlcohol = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        alcoholismo = new javax.swing.JCheckBox();
        BotonGuardar = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        jLabel19 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtxtAnotaciones = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(245, 244, 243));
        setMinimumSize(new java.awt.Dimension(50, 50));
        setPreferredSize(new java.awt.Dimension(550, 925));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane3.setPreferredSize(new java.awt.Dimension(910, 658));

        jPanel1.setBackground(new java.awt.Color(245, 244, 243));
        jPanel1.setPreferredSize(new java.awt.Dimension(910, 820));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel2.setText("HISTORIA CLINICA");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 0, 200, 40));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setText("EXPEDIENTE:");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 10, 100, 30));
        jPanel1.add(txtexpediente, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 10, 70, 30));

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 153, 153));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("Aun no hay historial.");
        jPanel1.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 10, 140, 30));

        jLabeText1.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabeText1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabeText1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(jLabeText1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 40, 330, 40));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("a) ANTECEDENTES HEREDOFAMILIARES");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 270, 30));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/exit.png"))); // NOI18N
        jLabel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 10, -1, 30));

        hepatopatia.setBackground(new java.awt.Color(245, 244, 243));
        hepatopatia.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        hepatopatia.setText("HEPATOPATÌA");
        jPanel1.add(hepatopatia, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 120, 30));

        endocrinas.setBackground(new java.awt.Color(245, 244, 243));
        endocrinas.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        endocrinas.setText("ENF. ENDOCRINAS");
        jPanel1.add(endocrinas, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 150, 140, 30));

        hipertension.setBackground(new java.awt.Color(245, 244, 243));
        hipertension.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        hipertension.setText("HIPERTENSIÓN");
        jPanel1.add(hipertension, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 120, 30));

        nefropatia.setBackground(new java.awt.Color(245, 244, 243));
        nefropatia.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        nefropatia.setText("NEFROPATÍA");
        nefropatia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nefropatiaActionPerformed(evt);
            }
        });
        jPanel1.add(nefropatia, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 120, 30));

        cancer.setBackground(new java.awt.Color(245, 244, 243));
        cancer.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cancer.setText("CÁNCER");
        jPanel1.add(cancer, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 150, 120, 30));

        otrosHF.setBackground(new java.awt.Color(245, 244, 243));
        otrosHF.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        otrosHF.setText("OTROS");
        jPanel1.add(otrosHF, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 190, 90, 30));

        alergicas.setBackground(new java.awt.Color(245, 244, 243));
        alergicas.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        alergicas.setText("ENF. ALÉRGICAS");
        jPanel1.add(alergicas, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 90, 120, 30));

        mentales.setBackground(new java.awt.Color(245, 244, 243));
        mentales.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        mentales.setText("ENF. MENTALES");
        jPanel1.add(mentales, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 120, 120, 30));

        cardiopatia.setBackground(new java.awt.Color(245, 244, 243));
        cardiopatia.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cardiopatia.setText("CARDIOPATÍA");
        jPanel1.add(cardiopatia, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 90, 120, 30));

        asma.setBackground(new java.awt.Color(245, 244, 243));
        asma.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        asma.setText("ASMA");
        jPanel1.add(asma, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 120, 120, 30));

        Diabetes.setBackground(new java.awt.Color(245, 244, 243));
        Diabetes.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Diabetes.setText("DIABETES");
        jPanel1.add(Diabetes, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 120, 30));

        JCBDiabetes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                JCBDiabetesMousePressed(evt);
            }
        });
        JCBDiabetes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JCBDiabetesActionPerformed(evt);
            }
        });
        jPanel1.add(JCBDiabetes, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 90, 130, 30));

        jPanel1.add(JCBHepatopatia, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 120, 130, 30));

        jPanel1.add(JCBAsma, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 120, 150, 30));

        jPanel1.add(JCBEndocrinas, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 150, 130, 30));

        jPanel1.add(JCBHipertension, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 150, 130, 30));

        jPanel1.add(JCBNefropatia, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 180, 130, 30));

        jPanel1.add(JCBCancer, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 150, 150, 30));

        jPanel1.add(JCBCardiopatia, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 90, 130, 30));

        jPanel1.add(JCBMentales, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 120, 130, 30));

        jPanel1.add(JCBAlergicas, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 90, 150, 30));

        txtotrosHF.setColumns(20);
        txtotrosHF.setRows(5);
        jScrollPane1.setViewportView(txtotrosHF);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 190, 450, 50));

        jSeparator4.setBackground(new java.awt.Color(204, 204, 0));
        jPanel1.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, 860, 10));

        jLabel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 250, 300, 40));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("b) ANTECEDENTES PERSONALES PATOLÓGICOS");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 310, 30));
        jPanel1.add(txttraumaticas, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 300, 240, 30));
        jPanel1.add(txtprevias, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 330, 240, 30));
        jPanel1.add(txtadicciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 360, 240, 30));
        jPanel1.add(txtotorsPErs, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 390, 240, 30));

        traumaticas.setBackground(new java.awt.Color(245, 244, 243));
        traumaticas.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        traumaticas.setText("TRAUMATICAS");
        traumaticas.setNextFocusableComponent(txttraumaticas);
        jPanel1.add(traumaticas, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 300, 200, 30));

        previas.setBackground(new java.awt.Color(245, 244, 243));
        previas.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        previas.setText("HOSPITALIZACIONES PREVIAS");
        previas.setNextFocusableComponent(txtprevias);
        jPanel1.add(previas, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 330, 200, 30));

        adicciones.setBackground(new java.awt.Color(245, 244, 243));
        adicciones.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        adicciones.setText("ADICCIONES");
        adicciones.setNextFocusableComponent(txtadicciones);
        jPanel1.add(adicciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 360, 200, 30));

        otorsPErs.setBackground(new java.awt.Color(245, 244, 243));
        otorsPErs.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        otorsPErs.setText("OTROS");
        otorsPErs.setNextFocusableComponent(txtotorsPErs);
        jPanel1.add(otorsPErs, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 390, 200, 30));
        jPanel1.add(txtalergias, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 390, 250, 30));
        jPanel1.add(txttransfusionales, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 360, 250, 30));
        jPanel1.add(txtquirurgicas, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 330, 250, 30));
        jPanel1.add(txtactuales, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 300, 250, 30));

        actuales.setBackground(new java.awt.Color(245, 244, 243));
        actuales.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        actuales.setText("ENFERMEDADES ACTUALES");
        actuales.setNextFocusableComponent(txtactuales);
        actuales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualesActionPerformed(evt);
            }
        });
        jPanel1.add(actuales, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 300, 180, 30));

        quirurgicas.setBackground(new java.awt.Color(245, 244, 243));
        quirurgicas.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        quirurgicas.setText("QUIRÚRGICAS");
        quirurgicas.setNextFocusableComponent(txtquirurgicas);
        jPanel1.add(quirurgicas, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 330, 180, 30));

        transfusionales.setBackground(new java.awt.Color(245, 244, 243));
        transfusionales.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        transfusionales.setText("TRANSFUSIONALES");
        transfusionales.setNextFocusableComponent(txttransfusionales);
        jPanel1.add(transfusionales, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 360, 180, 30));

        alergias.setBackground(new java.awt.Color(245, 244, 243));
        alergias.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        alergias.setText("ALERGIAS");
        alergias.setNextFocusableComponent(txtalergias);
        jPanel1.add(alergias, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 390, 180, 30));

        jSeparator3.setBackground(new java.awt.Color(204, 204, 0));
        jPanel1.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 640, 860, 10));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("d) ANOTACIONES/OBSERVACIONES");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 650, 360, 30));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setText("HÁBITOS PERSONALES:");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 470, 160, 30));

        habiturbana.setBackground(new java.awt.Color(245, 244, 243));
        Habitacion.add(habiturbana);
        habiturbana.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        habiturbana.setText("URBANA");
        jPanel1.add(habiturbana, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 470, 80, 30));

        habitrural.setBackground(new java.awt.Color(245, 244, 243));
        Habitacion.add(habitrural);
        habitrural.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        habitrural.setText("RURAL");
        jPanel1.add(habitrural, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 470, 80, 30));

        habittodos.setBackground(new java.awt.Color(245, 244, 243));
        Habitacion.add(habittodos);
        habittodos.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        habittodos.setText("TODOS LOS SERVICIOS");
        jPanel1.add(habittodos, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 470, 160, 30));

        habitletrina.setBackground(new java.awt.Color(245, 244, 243));
        Habitacion.add(habitletrina);
        habitletrina.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        habitletrina.setText("LETRINA");
        jPanel1.add(habitletrina, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 470, 80, 30));

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel13.setText("HABITACIÓN");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 470, 100, 30));

        Baño3erdia.setBackground(new java.awt.Color(245, 244, 243));
        Baño.add(Baño3erdia);
        Baño3erdia.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Baño3erdia.setText("C/3ER DIA");
        jPanel1.add(Baño3erdia, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 510, 90, 30));

        inmunizpendientes.setBackground(new java.awt.Color(245, 244, 243));
        Inmunizaciones.add(inmunizpendientes);
        inmunizpendientes.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        inmunizpendientes.setText("PENDIENTES");
        inmunizpendientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inmunizpendientesActionPerformed(evt);
            }
        });
        jPanel1.add(inmunizpendientes, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 510, 110, 30));

        Bañoirregular.setBackground(new java.awt.Color(245, 244, 243));
        Baño.add(Bañoirregular);
        Bañoirregular.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Bañoirregular.setText("IRREGULAR");
        jPanel1.add(Bañoirregular, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 510, 90, 30));

        BañoDiario.setBackground(new java.awt.Color(245, 244, 243));
        Baño.add(BañoDiario);
        BañoDiario.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        BañoDiario.setText("DIARIO");
        jPanel1.add(BañoDiario, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 510, 80, 30));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setText("INMUNIZACIONES");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 510, 130, 30));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setText("BAÑO");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 510, 50, 30));

        txtDescInmuniz.setText("Especifique");
        jPanel1.add(txtDescInmuniz, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 510, 180, 30));

        inmunizComplete.setBackground(new java.awt.Color(255, 255, 255));
        Inmunizaciones.add(inmunizComplete);
        inmunizComplete.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        inmunizComplete.setText("COMPLETAS");
        inmunizComplete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inmunizCompleteActionPerformed(evt);
            }
        });
        jPanel1.add(inmunizComplete, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 510, 110, 30));

        deportes.setBackground(new java.awt.Color(245, 244, 243));
        deportes.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        deportes.setText("DEPORTES (ACT. FISICA)");
        deportes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deportesActionPerformed(evt);
            }
        });
        jPanel1.add(deportes, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 550, 200, 30));

        jLabel17.setText("VECES/DÍA");
        jPanel1.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 550, 60, 30));

        txtdeportes.setText("Especifique");
        jPanel1.add(txtdeportes, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 550, 90, 30));

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel18.setText("ALIMENTACION");
        jPanel1.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 550, 120, 30));
        jPanel1.add(txtalimentacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 550, 50, 30));

        jLabel8.setText("AÑOS");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 590, 50, 30));
        jPanel1.add(txtAñosTabaq, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 590, 50, 30));
        jPanel1.add(txtDiaTabaq, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 590, 60, 30));

        jLabel12.setText("CIGARROS X DÍA");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 590, 110, 30));

        tabaquismo.setBackground(new java.awt.Color(245, 244, 243));
        tabaquismo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tabaquismo.setText("TABAQUISMO");
        jPanel1.add(tabaquismo, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 590, 110, 30));
        jPanel1.add(txtrecAlcohol, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 590, 60, 30));

        jLabel14.setText("BEB/FRECUENCIA");
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 590, 110, 30));
        jPanel1.add(txtAñosAlcohol, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 590, 50, 30));

        jLabel15.setText("AÑOS");
        jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 590, 50, 30));

        alcoholismo.setBackground(new java.awt.Color(245, 244, 243));
        alcoholismo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        alcoholismo.setText("ALCOHOLISMO");
        jPanel1.add(alcoholismo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 590, 130, 30));

        BotonGuardar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        BotonGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/save32x32.png"))); // NOI18N
        BotonGuardar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        BotonGuardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BotonGuardarMouseClicked(evt);
            }
        });
        jPanel1.add(BotonGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 570, 50, 50));

        jSeparator5.setBackground(new java.awt.Color(204, 204, 0));
        jPanel1.add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 430, 860, 10));

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel19.setText("c) ANTECEDENTES PERSONALES NO PATOLÓGICOS");
        jPanel1.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 440, 360, 30));

        jtxtAnotaciones.setColumns(20);
        jtxtAnotaciones.setRows(5);
        jScrollPane2.setViewportView(jtxtAnotaciones);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 690, 790, 110));

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jButton1.setText("IMPRIMIR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 10, 100, 40));

        jScrollPane3.setViewportView(jPanel1);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
    this.setVisible(false);
    }//GEN-LAST:event_jLabel3MouseClicked

    private void BotonGuardarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BotonGuardarMouseClicked
        Connection cn = con2.conexion();
        String baño ="",dental="",habitacion="",alimentacion="",
                var1=txtactuales.getText(),
                var2=txtquirurgicas.getText(),
                var3=txttransfusionales.getText(),
                var4=txtalergias.getText(),
                var5=txttraumaticas.getText(),
                var6=txtprevias.getText(),
                var7=txtadicciones.getText(),
                var8=txtotorsPErs.getText();
        PreparedStatement pps=null;
        
        if(var1.isEmpty() && var2.isEmpty() && var3.isEmpty() && var4.isEmpty() && var5.isEmpty() && var6.isEmpty() && var7.isEmpty() && var8.isEmpty()){
           JOptionPane.showMessageDialog(null, "Campos vacios debe elegir por lo menos uno de la segunda seccion");
        }else{
            if(ValidaHeredofamiliarBool(Integer.toString(param)))
            {
//                JOptionPane.showMessageDialog(null, "ln-525. Ya existe!!!"+param);
            String query2="UPDATE h_clinica SET expediente =?,diabetes =?,hepatopatia =?,asma =?,endocrinas =?,hipertension =?,nefropatia =?,cancer =?,"
                +"cardiopatia =?,mentales =?,alergicas =?,otrosHF =?,actuales =?,quirurgicas =?,transfusionales =?,alergias =?,traumaticas =?,hospitalizaciones =?,adicciones =?,otrosPer =?,baño =?,"
                +"habitacion =?,alimentacion =?,deportes =?,inmunizaciones =?,descinmunizaciones =?,alcoholismo =?,frecuencia =?,añosAlc =?,tabaquismo =?,cigdia =?,añosTabaq =?,anotacion=? WHERE expediente = '"+param+"'";
            try{
                cn.setAutoCommit(false);
//                System.out.println(query2);
                pps = cn.prepareStatement(query2);
                
                pps.setString(1, txtexpediente.getText());
                    
                    if(Diabetes.isSelected())
                        pps.setString(2, JCBDiabetes.getSelectedItem().toString());
                    else
                        pps.setString(2, "/");
                    
                    if(hepatopatia.isSelected())
                        pps.setString(3, JCBHepatopatia.getSelectedItem().toString());
                    else
                        pps.setString(3, "/");
                    
                    if(asma.isSelected())
                        pps.setString(4, JCBAsma.getSelectedItem().toString());
                    else
                        pps.setString(4, "/");
                    
                    if(endocrinas.isSelected())
                        pps.setString(5, JCBEndocrinas.getSelectedItem().toString());
                    else
                        pps.setString(5, "/");
                    
                    if(hipertension.isSelected())
                        pps.setString(6, JCBHipertension.getSelectedItem().toString());
                    else
                        pps.setString(6, "/");
                    
                    if(nefropatia.isSelected())
                        pps.setString(7, JCBNefropatia.getSelectedItem().toString());
                    else
                        pps.setString(7, "/");
                    
                    if(cancer.isSelected())
                        pps.setString(8, JCBCancer.getSelectedItem().toString());
                    else
                        pps.setString(8, "/");
                    
                    if(cardiopatia.isSelected())
                        pps.setString(9, JCBCardiopatia.getSelectedItem().toString());
                    else
                        pps.setString(9, "/");
                    
                    if(mentales.isSelected())
                        pps.setString(10, JCBMentales.getSelectedItem().toString());
                    else
                        pps.setString(10, "/");
                    
                    if(alergicas.isSelected())
                        pps.setString(11, JCBAlergicas.getSelectedItem().toString());
                    else
                        pps.setString(11, "/");
                    
                    if(otrosHF.isSelected())
                        pps.setString(12, txtotrosHF.getText());
                    else
                        pps.setString(12, "/");
                    
    //***PERSONALES PATOLOGICOS
                    if(actuales.isSelected())    
                        pps.setString(13, txtactuales.getText());
                    else
                        pps.setString(13, "/");
                    
                    if(quirurgicas.isSelected())
                        pps.setString(14, txtquirurgicas.getText());
                    else 
                        pps.setString(14, "/");
                    
                    if(transfusionales.isSelected())
                        pps.setString(15, txttransfusionales.getText());
                    else
                        pps.setString(15, "/");
                    
                    if(alergias.isSelected())
                        pps.setString(16, txtalergias.getText());
                    else
                        pps.setString(16, "/");
                    
                    if(traumaticas.isSelected())
                        pps.setString(17, txttraumaticas.getText());
                    else
                        pps.setString(17, "/");
                    
                    if(previas.isSelected())
                        pps.setString(18, txtprevias.getText());
                    else
                        pps.setString(18, "/")
                                ;
                    if(adicciones.isSelected())
                        pps.setString(19, txtadicciones.getText());
                    else
                        pps.setString(19, "/");
                    
                    if(otorsPErs.isSelected())
                        pps.setString(20, txtotorsPErs.getText());
                    else
                        pps.setString(20, "/");
                    
    ///PARTE C) personales no patolgicos
                    if(BañoDiario.isSelected())
                        baño=BañoDiario.getText();
                    else if(Baño3erdia.isSelected())
                        baño=Baño3erdia.getText();
                    else
                        if(Bañoirregular.isSelected())
                            baño=Bañoirregular.getText();
                    
                    if(baño.isEmpty())
                    {
                        JOptionPane.showMessageDialog(null, "Debe elegir opcion de baño");
                        pps.setString(21, "/");
                    }else
                        pps.setString(21, baño);
                        
                    
                    
                    if(habiturbana.isSelected())
                        habitacion=habiturbana.getText();
                    else
                        if(habitrural.isSelected())
                            habitacion=habitrural.getText();
                        else
                            if(habittodos.isSelected())
                                habitacion=habittodos.getText();
                            else
                                if(habitletrina.isSelected())
                                    habitacion=habitletrina.getText();
                    
                    if(habitacion.isEmpty())
                    {
                        JOptionPane.showMessageDialog(null, "Debe elegir opcion de Habitacion");
                        pps.setString(22, "/");
                    }else
                        pps.setString(22, habitacion);
                    
                    alimentacion=txtalimentacion.getText();
                    if(alimentacion.isEmpty())
                        pps.setString(23, "/");
                    else
                        pps.setString(23, alimentacion);
                    
                    if(deportes.isSelected())
                        pps.setString(24, txtdeportes.getText());
                    else
                        pps.setString(24, "/");
                    
                    if(inmunizComplete.isSelected())
                    {
                        pps.setString(25, inmunizComplete.getText());
                        pps.setString(26, "/");
                    }else
                        if(inmunizpendientes.isSelected())
                        {
                            pps.setString(25, inmunizpendientes.getText());
                            pps.setString(26, txtDescInmuniz.getText());
                        }else{
                            JOptionPane.showMessageDialog(null, "Debe elegir opcion de Inmunizaciones");
                            pps.setString(25, "/");
                            pps.setString(26, "/");
                        }
                            
                    
                    if(alcoholismo.isSelected())
                    {
                        pps.setInt(27, 1);
                        pps.setString(28, txtrecAlcohol.getText());
                        pps.setString(29, txtAñosAlcohol.getText());
                    }else{
                        pps.setInt(27, 0);
                        pps.setString(28, "/");
                        pps.setString(29, "/");
                    }
                    
                    if(tabaquismo.isSelected())
                    {
                        pps.setInt(30, 1);
                        pps.setString(31, txtDiaTabaq.getText());
                        pps.setString(32, txtAñosTabaq.getText());
                    }else{
                        pps.setInt(30, 0);
                        pps.setString(31, "/");
                        pps.setString(32, "/");
                    }
                    
                    pps.setString(33, jtxtAnotaciones.getText());
                        
                    pps.executeUpdate();
                    
                    cn.commit();
                    JOptionPane.showMessageDialog(null, "Datos actualizados");
            }catch (SQLException ex) {
                System.err.println("ERROR: " + ex.getMessage());
                if(cn!=null)
                {
//                    System.out.println("Rollback");
                    try{
                    //deshace todos los cambios realizados en los datos
                        cn.rollback();
                    } catch (SQLException ex1) {
                        System.err.println( "No se pudo deshacer" + ex1.getMessage() );    
                    }
            }                
         }finally{
//             System.out.println( "cierra conexion a la base de datos" );    
             try {
                                
                 if(pps != null) pps.close();                
                 if(cn !=null) cn.close();
             } catch (SQLException ex) {
                 System.err.println( ex.getMessage() );    
             }
         }            
            }else{
        
        try {
    ////se deshabilita el modo de confirmación automática
            cn.setAutoCommit(false);
                
            pps = cn.prepareStatement("INSERT INTO h_clinica (expediente,diabetes,hepatopatia,asma,endocrinas,hipertension,nefropatia,cancer,"
                +"cardiopatia,mentales,alergicas,otrosHF,actuales,quirurgicas,transfusionales,alergias,traumaticas,hospitalizaciones,adicciones,otrosPer,baño,"
                +"habitacion,alimentacion,deportes,inmunizaciones,descinmunizaciones,alcoholismo,frecuencia,añosAlc,tabaquismo,cigdia,añosTabaq,anotacion) "
                +"VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                    
                    
                    pps.setString(1, txtexpediente.getText());
                    
                    if(Diabetes.isSelected())
                        pps.setString(2, JCBDiabetes.getSelectedItem().toString());
                    else
                        pps.setString(2, "/");
                    
                    if(hepatopatia.isSelected())
                        pps.setString(3, JCBHepatopatia.getSelectedItem().toString());
                    else
                        pps.setString(3, "/");
                    
                    if(asma.isSelected())
                        pps.setString(4, JCBAsma.getSelectedItem().toString());
                    else
                        pps.setString(4, "/");
                    
                    if(endocrinas.isSelected())
                        pps.setString(5, JCBEndocrinas.getSelectedItem().toString());
                    else
                        pps.setString(5, "/");
                    
                    if(hipertension.isSelected())
                        pps.setString(6, JCBHipertension.getSelectedItem().toString());
                    else
                        pps.setString(6, "/");
                    
                    if(nefropatia.isSelected())
                        pps.setString(7, JCBNefropatia.getSelectedItem().toString());
                    else
                        pps.setString(7, "/");
                    
                    if(cancer.isSelected())
                        pps.setString(8, JCBCancer.getSelectedItem().toString());
                    else
                        pps.setString(8, "/");
                    
                    if(cardiopatia.isSelected())
                        pps.setString(9, JCBCardiopatia.getSelectedItem().toString());
                    else
                        pps.setString(9, "/");
                    
                    if(mentales.isSelected())
                        pps.setString(10, JCBMentales.getSelectedItem().toString());
                    else
                        pps.setString(10, "/");
                    
                    if(alergicas.isSelected())
                        pps.setString(11, JCBAlergicas.getSelectedItem().toString());
                    else
                        pps.setString(11, "/");
                    
                    if(otrosHF.isSelected())
                        pps.setString(12, txtotrosHF.getText());
                    else
                        pps.setString(12, "/");
                    
    //***PERSONALES PATOLOGICOS
                    if(actuales.isSelected())    
                        pps.setString(13, txtactuales.getText());
                    else
                        pps.setString(13, "/");
                    
                    if(quirurgicas.isSelected())
                        pps.setString(14, txtquirurgicas.getText());
                    else 
                        pps.setString(14, "/");
                    
                    if(transfusionales.isSelected())
                        pps.setString(15, txttransfusionales.getText());
                    else
                        pps.setString(15, "/");
                    
                    if(alergias.isSelected())
                        pps.setString(16, txtalergias.getText());
                    else
                        pps.setString(16, "/");
                    
                    if(traumaticas.isSelected())
                        pps.setString(17, txttraumaticas.getText());
                    else
                        pps.setString(17, "/");
                    
                    if(previas.isSelected())
                        pps.setString(18, txtprevias.getText());
                    else
                        pps.setString(18, "/")
                                ;
                    if(adicciones.isSelected())
                        pps.setString(19, txtadicciones.getText());
                    else
                        pps.setString(19, "/");
                    
                    if(otorsPErs.isSelected())
                        pps.setString(20, txtotorsPErs.getText());
                    else
                        pps.setString(20, "/");
                    
    ///PARTE C) personales no patolgicos
                    if(BañoDiario.isSelected())
                        baño=BañoDiario.getText();
                    else if(Baño3erdia.isSelected())
                        baño=Baño3erdia.getText();
                    else
                        if(Bañoirregular.isSelected())
                            baño=Bañoirregular.getText();
                    
                    if(baño.isEmpty())
                    {
                        JOptionPane.showMessageDialog(null, "Debe elegir opcion de baño");
                        pps.setString(21, "/");
                    }else
                        pps.setString(21, baño);
                        
                    
                    
                    if(habiturbana.isSelected())
                        habitacion=habiturbana.getText();
                    else
                        if(habitrural.isSelected())
                            habitacion=habitrural.getText();
                        else
                            if(habittodos.isSelected())
                                habitacion=habittodos.getText();
                            else
                                if(habitletrina.isSelected())
                                    habitacion=habitletrina.getText();
                    
                    if(habitacion.isEmpty())
                    {
                        JOptionPane.showMessageDialog(null, "Debe elegir opcion de Habitacion");
                        pps.setString(22, "/");
                    }else
                        pps.setString(22, habitacion);
                    
                    alimentacion=txtalimentacion.getText();
                    if(alimentacion.isEmpty())
                        pps.setString(23, "/");
                    else
                        pps.setString(23, alimentacion);
                    
                    if(deportes.isSelected())
                        pps.setString(24, txtdeportes.getText());
                    else
                        pps.setString(24, "/");
                    
                    if(inmunizComplete.isSelected())
                    {
                        pps.setString(25, inmunizComplete.getText());
                        pps.setString(26, "/");
                    }else
                        if(inmunizpendientes.isSelected())
                        {
                            pps.setString(25, inmunizpendientes.getText());
                            pps.setString(26, txtDescInmuniz.getText());
                        }else{
                            JOptionPane.showMessageDialog(null, "Debe elegir opcion de Inmunizaciones");
                            pps.setString(25, "/");
                            pps.setString(26, "/");
                        }
                            
                    
                    if(alcoholismo.isSelected())
                    {
                        pps.setInt(27, 1);
                        pps.setString(28, txtrecAlcohol.getText());
                        pps.setString(29, txtAñosAlcohol.getText());
                    }else{
                        pps.setInt(27, 0);
                        pps.setString(28, "/");
                        pps.setString(29, "/");
                    }
                    if(tabaquismo.isSelected())
                    {
                        pps.setInt(30, 1);
                        pps.setString(31, txtDiaTabaq.getText());
                        pps.setString(32, txtAñosTabaq.getText());
                    }else{
                        pps.setInt(30, 0);
                        pps.setString(31, "/");
                        pps.setString(32, "/");
                    }
    //VARIABLE DE ANOTACIONES
                    String anot = "";
                    anot = jtxtAnotaciones.getText();
                    if(anot.isEmpty()){
                    pps.setString(33, "/");
                    }else{
                        pps.setString(33, anot);
                    }
                    pps.executeUpdate();
                    cn.commit();
                    JOptionPane.showMessageDialog(null, "Datos Guardados");

        }catch (SQLException ex) {
//            System.err.println("ERROR: " + ex.getMessage());
            if(cn!=null)
            {
//                System.out.println("Rollback");
                try{
                    //deshace todos los cambios realizados en los datos
                        cn.rollback();
                    } catch (SQLException ex1) {
                        System.err.println( "No se pudo deshacer" + ex1.getMessage() );    
                    }
            }                
         }finally{
 //            System.out.println( "cierra conexion a la base de datos" );    
             try {                   
                 if(pps != null) pps.close();                
                 if(cn !=null) cn.close();
             } catch (SQLException ex) {
                 System.err.println( ex.getMessage() );    
             }
            }         
        }// else
}
    }//GEN-LAST:event_BotonGuardarMouseClicked

    private void deportesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deportesActionPerformed
        txtdeportes.setText("");
    }//GEN-LAST:event_deportesActionPerformed

    private void inmunizCompleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inmunizCompleteActionPerformed
        txtDescInmuniz.setText("");
    }//GEN-LAST:event_inmunizCompleteActionPerformed

    private void inmunizpendientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inmunizpendientesActionPerformed
        txtDescInmuniz.setText("");
    }//GEN-LAST:event_inmunizpendientesActionPerformed

    private void JCBDiabetesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JCBDiabetesActionPerformed
    }//GEN-LAST:event_JCBDiabetesActionPerformed

    private void JCBDiabetesMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JCBDiabetesMousePressed
    }//GEN-LAST:event_JCBDiabetesMousePressed

    private void actualesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_actualesActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String  var = txtexpediente.getText();
        
        if(fn.ValidaHeredofamiliarBool(var)){
                 rp.reporteHeredofam(var);
        }else{
                JOptionPane.showMessageDialog(null, "Aún no existe antecedentes heredofamiliar");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void nefropatiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nefropatiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nefropatiaActionPerformed

    void cargaTexto(JLabel lb, String txt){
        lb.setText(txt);
    }
    
    void limpiarcampos(){
        
    }
    
    public void cargaDatos(){
        Connection cn = con2.conexion();
        String sql = "SELECT * FROM h_clinica WHERE expediente = "+param+"";
//        System.out.println("sentencia"+sql);
        Statement st = null;
        ResultSet rs = null;
        String aux ="",aux2="",aux3="",aux4="",anotac="";
        int i = 1;
        
        try {
            st = cn.createStatement();
            rs = st.executeQuery(sql);
            
            cn.setAutoCommit(false);
            
            while(rs.next() && i<=34)//tenia 34 antes de quitar lavado dental
            {
                aux=rs.getString(1);
                txtexpediente.setText(rs.getString(2));
                
    //+++   ENFERMEDADES HEREDO FAMILIARES           
                aux2=rs.getString(3);//diabetes
                   // JOptionPane.showMessageDialog(null, aux2);
                if(!aux2.equals("/"))
                {
                    Diabetes.setSelected(true);
                    JCBDiabetes.setSelectedItem(aux2);
                    
//                    JCBDiabetes.setSelectedIndex(4);
                    aux2="";
                }else{
                    Diabetes.setSelected(false);
                    JCBDiabetes.setSelectedItem("/");
                    aux2="";
                }
                
                aux2=rs.getString(4);//desde aqui HEPÀTOPATIA
                if(!aux2.equals("/"))
                {
                    hepatopatia.setSelected(true);
                    JCBHepatopatia.setSelectedItem(aux2);
                    aux2="";
                }else{
                    hepatopatia.setSelected(false);
                    JCBHepatopatia.setSelectedItem("/");
                    aux2="";
                }
                
                aux2=rs.getString(5);   //ASMA
                if(!aux2.equals("/"))
                {
                    asma.setSelected(true);
                    JCBAsma.setSelectedItem(aux2);
                    aux2="";
                }else{
                    asma.setSelected(false);
                    JCBAsma.setSelectedItem("/");
                    aux2="";
                }
                
                aux2=rs.getString(6);   //endocrinas
                if(!aux2.equals("/"))
                {
                    endocrinas.setSelected(true);
                    JCBEndocrinas.setSelectedItem(aux2);
                    aux2="";
                }else{
                    endocrinas.setSelected(false);
                    JCBEndocrinas.setSelectedItem("/");
                    aux2="";
                }
                
                aux2=rs.getString(7);   //HIPERTENSION
                if(!aux2.equals("/"))
                {
                    hipertension.setSelected(true);
                    JCBHipertension.setSelectedItem(aux2);
                    aux2="";
                }else{
                    JCBHipertension.setSelectedItem("/");
                    hipertension.setSelected(false);
                    aux2="";
                }
                
                aux2=rs.getString(8);   //NEFROPATIA
                if(!aux2.equals("/"))
                {
                    nefropatia.setSelected(true);
                    JCBNefropatia.setSelectedItem(aux2);
                    aux2="";
                }else{
                    JCBNefropatia.setSelectedItem("/");
                    nefropatia.setSelected(false);
                    aux2="";
                }
                
                aux2=rs.getString(9);   //CANCER
                if(!aux2.equals("/"))
                {
                    cancer.setSelected(true);
                    JCBCancer.setSelectedItem(aux2);
                    aux2="";
                }else{
                    JCBCancer.setSelectedItem("/");
                    cancer.setSelected(false);
                    aux2="";
                }
                
                aux2=rs.getString(10);  //CARDIOPATIA
                if(!aux2.equals("/"))
                {
                    cardiopatia.setSelected(true);
                    JCBCardiopatia.setSelectedItem(aux2);
                    aux2="";
                }else{
                    JCBCardiopatia.setSelectedItem("/");
                    cardiopatia.setSelected(false);
                    aux2="";
                }
                
                aux2=rs.getString(11);  //MENTALES
                if(!aux2.equals("/"))
                {
                    mentales.setSelected(true);
                    JCBMentales.setSelectedItem(aux2);
                    aux2="";
                }else{
                    JCBMentales.setSelectedItem("/");
                    mentales.setSelected(false);
                    aux2="";
                }
                
                aux2=rs.getString(12);  //ALERGICAS
                if(!aux2.equals("/"))
                {
                    alergicas.setSelected(true);
                    JCBAlergicas.setSelectedItem(aux2);
                    aux2="";
                }else{
                    JCBAlergicas.setSelectedItem("/");
                    alergicas.setSelected(false);
                    aux2="";
                }
                
                aux2=rs.getString(13);  //otros HEREDO-FAMILIARES
                if(!aux2.equals("/"))
                {
                    otrosHF.setSelected(true);
                    txtotrosHF.setText(aux2);
                    aux2="";
                }else{
                    txtotrosHF.setText(aux2);
                    otrosHF.setSelected(false);
                    aux2="";
                }
                
    // ANTECEDENTES PERSONALES PATOLOGICOS            
                aux2=rs.getString(14);  // ACTUALES
                if(!aux2.equals("/"))
                {
                    actuales.setSelected(true);
                    txtactuales.setText(aux2);
                    aux2="";
                }else{
                    txtactuales.setText(aux2);
                    actuales.setSelected(false);
                    aux2="";
                }
                
                aux2=rs.getString(15);  // QUIRURGICAS
                if(!aux2.equals("/"))
                {
                    quirurgicas.setSelected(true);
                    txtquirurgicas.setText(aux2);
                    aux2="";
                }else{
                    txtquirurgicas.setText(aux2);
                    quirurgicas.setSelected(false);
                    aux2="";
                }
                
                aux2=rs.getString(16);  // TRANSFUSIONALES
                if(!aux2.equals("/"))
                {
                    transfusionales.setSelected(true);
                    txttransfusionales.setText(aux2);
                    aux2="";
                }else{
                    txttransfusionales.setText(aux2);
                    transfusionales.setSelected(false);
                    aux2="";
                }
                
                aux2=rs.getString(17);  // ALERGIAS
                if(!aux2.equals("/"))
                {
                    alergias.setSelected(true);
                    txtalergias.setText(aux2);
                    aux2="";
                }else{
                    txtalergias.setText(aux2);
                    alergias.setSelected(false);
                    aux2="";
                }
                
                aux2=rs.getString(18);  // TRAUMATICAS
                if(!aux2.equals("/"))
                {
                    traumaticas.setSelected(true);
                    txttraumaticas.setText(aux2);
                    aux2="";
                }else{
                    txttraumaticas.setText(aux2);
                    traumaticas.setSelected(false);
                    aux2="";
                }
                
                aux2=rs.getString(19);  // HOSPITALIZACIONES
                if(!aux2.equals("/"))
                {
                    previas.setSelected(true);
                    txtprevias.setText(aux2);
                    aux2="";
                }else{
                    txtprevias.setText(aux2);
                    previas.setSelected(false);
                    aux2="";
                }
                
                aux2=rs.getString(20);  //
                if(!aux2.equals("/"))
                {
                    adicciones.setSelected(true);
                    txtadicciones.setText(aux2);
                    aux2="";
                }else{
                    txtadicciones.setText(aux2);
                    adicciones.setSelected(false);
                    aux2="";
                }
                
                aux2=rs.getString(21);  //
                if(!aux2.equals("/"))
                {
                    otorsPErs.setSelected(true);
                    txtotorsPErs.setText(aux2);
                    aux2="";
                }else{
                    txtotorsPErs.setText(aux2);
                    otorsPErs.setSelected(false);
                    aux2="";
                }
                
    // PERSONALES NO PATOLOGICOS
                aux2=rs.getString(22);  // BAÑO
                if(aux2.equals(BañoDiario.getText()))
                {
                    BañoDiario.setSelected(true);
                    aux2="";
                }else{
                    if(aux2.equals(Baño3erdia.getText()))
                    {
                        Baño3erdia.setSelected(true);
                        aux2="";
                    }else{
                        if(aux2.equals(Bañoirregular.getText()))
                        {
                            Bañoirregular.setSelected(true);
                            aux2="";
                        }
                    }                        
                }
                
                
                aux2=rs.getString(23);  // HABITACIONAL
                if(aux2.equals(habiturbana.getText()))
                {
                    habiturbana.setSelected(true);
                    aux2="";
                }else{
                    if(aux2.equals(habitrural.getText()))
                    {
                        habitrural.setSelected(true);
                        aux2="";
                    }else{
                        if(aux2.equals(habittodos.getText()))
                        {
                            habittodos.setSelected(true);
                            aux2="";
                        }else{
                            if(aux2.equals(habitletrina.getText()))
                            {
                                habitletrina.setSelected(true);
                                aux2="";
                            }
                        }
                    }
                }
                
                aux2=rs.getString(24);  // ALIMENTACION
                txtalimentacion.setText(aux2);
                aux2="";
                
                aux2=rs.getString(25);  // DEPORTES
                if(!aux2.equals("/"))
                {
                    deportes.setSelected(true);
                    txtdeportes.setText(aux2);
                    aux2="";
                }else{
                    deportes.setSelected(false);
                    txtdeportes.setText(aux2);
                    aux2="";
                }
                
                aux2=rs.getString(26);  //INMUNIZACIONES
                aux3=rs.getString(27); //DESC INMUNIZACIONES
                if(aux2.equals(inmunizComplete.getText()))
                {
                    inmunizComplete.setSelected(true);
                    inmunizpendientes.setSelected(false);
                    txtDescInmuniz.setText(aux3);
                    aux2=aux3="";
                }else{
                    if(aux2.equals(inmunizpendientes.getText()))
                    {
                        inmunizComplete.setSelected(false);
                        inmunizpendientes.setSelected(true);
                        txtDescInmuniz.setText(aux3);
                        aux2=aux3="";
                    }else{
                        inmunizComplete.setSelected(false);
                        inmunizpendientes.setSelected(false);
                        txtDescInmuniz.setText("/");
                        aux2=aux3="";
                    }
                }                
                aux2=rs.getString(28);//ALCOHOLISMO
                aux3=rs.getString(29);//FRECUENCIA ALCOHOLISMO
                aux4=rs.getString(30);//AÑOS ALCOHOLISMO
                if(aux2.equals("1"))
                {
                    alcoholismo.setSelected(true);
                    txtrecAlcohol.setText(aux3);
                    txtAñosAlcohol.setText(aux4);
                    aux2=aux3=aux4="";
                }else{
                    alcoholismo.setSelected(false);
                    txtrecAlcohol.setText(aux3);
                    txtAñosAlcohol.setText(aux4);
                    aux2=aux3=aux4="";
                }                
                aux2=rs.getString(31);//tabaquismo
                aux3=rs.getString(32);//tabacos por dia
                aux4=rs.getString(33);//años de tasbaquismo
                if(aux2.equals("1"))
                {
                    tabaquismo.setSelected(true);
                    txtDiaTabaq.setText(aux3);
                    txtAñosTabaq.setText(aux4);
                    aux2=aux3=aux4="";
                }else{
                    tabaquismo.setSelected(false);
                    txtDiaTabaq.setText(aux3);
                    txtAñosTabaq.setText(aux4);
                }                
                    jtxtAnotaciones.setText(rs.getString(34));                    
/*                    for(int x = 1;x <= rs.getMetaData().getColumnCount(); x++)
                        System.out.println("Datos -> "+rs.getString(x));
*/
           }            
            cn.commit();
        }catch (SQLException ex) {
             System.err.println("ERROR: " + ex.getMessage());
             if(cn!=null)
             {
 //                System.out.println("Rollback");
                 try {
                     //deshace todos los cambios realizados en los datos
                     cn.rollback();
                 } catch (SQLException ex1) {
 //                    System.err.println( "No se pudo deshacer" + ex1.getMessage() );    
                 }
             }                
         }finally{
//             System.out.println( "cierra conexion a la base de datos" );    
             try {
                 if(st != null) st.close();                
                 if(rs != null) rs.close();                
                 if(cn !=null) cn.close();
                 
//Letrero se cierran   JOptionPane.showMessageDialog(null, "SEcierran");
             } catch (SQLException ex) {
                 System.err.println( ex.getMessage() );    
             }
         } 
        
    }
    
    public void llenacombo(){
        JCBDiabetes.removeAllItems();
        JCBAsma.removeAllItems();
        JCBEndocrinas.removeAllItems();
        JCBHepatopatia.removeAllItems();
        
        JCBHipertension.removeAllItems();
        JCBNefropatia.removeAllItems();
        JCBCancer.removeAllItems();
        
        JCBCardiopatia.removeAllItems();
        JCBMentales.removeAllItems();
        JCBAlergicas.removeAllItems();
        
        Connection cn = con2.conexion();

        String consul = "SELECT nombre from c_familiares";
        int i = 1;
        Statement st;
        try {
            st = cn.createStatement();
            ResultSet rs = st.executeQuery(consul);
            while(rs.next()){
                JCBDiabetes.addItem(rs.getString(i));
                JCBAsma.addItem(rs.getString(i));
                JCBEndocrinas.addItem(rs.getString(i));
                JCBHepatopatia.addItem(rs.getString(i));
                
                JCBHipertension.addItem(rs.getString(i));
                JCBNefropatia.addItem(rs.getString(i));
                JCBCancer.addItem(rs.getString(i));
                
                JCBCardiopatia.addItem(rs.getString(i));
                JCBMentales.addItem(rs.getString(i));
                JCBAlergicas.addItem(rs.getString(i));
            }
        } catch (SQLException ex) {
            Logger.getLogger(JPanelHistoriaClinica.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
     public boolean ValidaHeredofamiliarBool(String id) {
        boolean bad= false;
        PreparedStatement pstm=null;
        ResultSet res=null;
        try{
            pstm = con2.conexion().prepareStatement("SELECT expediente FROM h_clinica WHERE expediente = '" +id+ "'");
            res = pstm.executeQuery();
            if(res.next())
                bad=true;
             else
                bad=false;                
            pstm.close();
            res.close();
        } catch(SQLException e){
            JOptionPane.showMessageDialog(null, e);
        }
        return bad;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup Baño;
    private javax.swing.JCheckBox Baño3erdia;
    private javax.swing.JCheckBox BañoDiario;
    private javax.swing.JCheckBox Bañoirregular;
    private javax.swing.JLabel BotonGuardar;
    private javax.swing.JCheckBox Diabetes;
    private javax.swing.ButtonGroup Habitacion;
    private javax.swing.ButtonGroup Inmunizaciones;
    private javax.swing.JComboBox<String> JCBAlergicas;
    private javax.swing.JComboBox<String> JCBAsma;
    private javax.swing.JComboBox<String> JCBCancer;
    private javax.swing.JComboBox<String> JCBCardiopatia;
    private javax.swing.JComboBox<String> JCBDiabetes;
    private javax.swing.JComboBox<String> JCBEndocrinas;
    private javax.swing.JComboBox<String> JCBHepatopatia;
    private javax.swing.JComboBox<String> JCBHipertension;
    private javax.swing.JComboBox<String> JCBMentales;
    private javax.swing.JComboBox<String> JCBNefropatia;
    private javax.swing.ButtonGroup LavDental;
    private javax.swing.JCheckBox actuales;
    private javax.swing.JCheckBox adicciones;
    private javax.swing.JCheckBox alcoholismo;
    private javax.swing.JCheckBox alergias;
    private javax.swing.JCheckBox alergicas;
    private javax.swing.JCheckBox asma;
    private javax.swing.JCheckBox cancer;
    private javax.swing.JCheckBox cardiopatia;
    private javax.swing.JCheckBox deportes;
    private javax.swing.JCheckBox endocrinas;
    private javax.swing.JCheckBox habitletrina;
    private javax.swing.JCheckBox habitrural;
    private javax.swing.JCheckBox habittodos;
    private javax.swing.JCheckBox habiturbana;
    private javax.swing.JCheckBox hepatopatia;
    private javax.swing.JCheckBox hipertension;
    private javax.swing.JCheckBox inmunizComplete;
    private javax.swing.JCheckBox inmunizpendientes;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabeText1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    public javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JTextArea jtxtAnotaciones;
    private javax.swing.JCheckBox mentales;
    private javax.swing.JCheckBox nefropatia;
    private javax.swing.JCheckBox otorsPErs;
    private javax.swing.JCheckBox otrosHF;
    private javax.swing.JCheckBox previas;
    private javax.swing.JCheckBox quirurgicas;
    private javax.swing.JCheckBox tabaquismo;
    private javax.swing.JCheckBox transfusionales;
    private javax.swing.JCheckBox traumaticas;
    private javax.swing.JTextField txtAñosAlcohol;
    private javax.swing.JTextField txtAñosTabaq;
    private javax.swing.JTextField txtDescInmuniz;
    private javax.swing.JTextField txtDiaTabaq;
    private javax.swing.JTextField txtactuales;
    private javax.swing.JTextField txtadicciones;
    private javax.swing.JTextField txtalergias;
    private javax.swing.JTextField txtalimentacion;
    private javax.swing.JTextField txtdeportes;
    public javax.swing.JTextField txtexpediente;
    private javax.swing.JTextField txtotorsPErs;
    private javax.swing.JTextArea txtotrosHF;
    private javax.swing.JTextField txtprevias;
    private javax.swing.JTextField txtquirurgicas;
    private javax.swing.JTextField txtrecAlcohol;
    private javax.swing.JTextField txttransfusionales;
    private javax.swing.JTextField txttraumaticas;
    // End of variables declaration//GEN-END:variables
}
