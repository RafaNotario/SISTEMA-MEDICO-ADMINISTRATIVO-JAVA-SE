
package sistema1;

import Reportes.Reportes;
import datechooser.beans.DateChooserDialog;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;
import java.util.Calendar;
import com.toedter.calendar.JCalendar;
import javax.swing.plaf.OptionPaneUI;
import javax.swing.table.TableColumn;

/**
 *
 * @author Rafa
 */
public class JPanelConsulta extends javax.swing.JPanel {

    //variable para realizar el update 
    public String id_Consulta="";
    
    ConexionDBOriginal con2 = new ConexionDBOriginal();
    //Connection cn = con.conexion();
    
    Funciones fn = new Funciones();
    Reportes rp = new Reportes();
    
    //variables para PanelReceta
    DefaultTableModel modeloReceta = new DefaultTableModel();
    DefaultTableModel dtm;
    
    
//variable para reportar errores en el insert dentro del ciclo for
    public boolean band = true, bandVistas=true;

//Dar formato dat al dateChooser    
    SimpleDateFormat formato = new SimpleDateFormat("yyyy/MM/dd");
    SimpleDateFormat formatoPrueba = new SimpleDateFormat("dd/MM/yyyy");
    
//contador para manejar el evento del caledar FUR
    int cont = 0;
    

    public JPanelConsulta() {
        initComponents();
        llenacomboMedicamento();
        llenacomboTratamiento();
//Obtener modelo de la tabla        
        this.dtm = (DefaultTableModel) jTableReceta.getModel();
        jPanelReceta.setVisible(false);

        jLabelAbreReceta.setVisible(false);
        jLabelPDF.setVisible(false);
        
        dateChooserCombo1.setVisible(false);
        
        dateChooserCombo1.setDateFormat(formatoPrueba);
        
//        dateChooserCombo3.setDateFormat(formatoPrueba);
//        dateChooserCombo2.setDateFormat(formatoPrueba);
        
        //DESAPARECE COSAS DE MAS
        txtExpCM.setVisible(false);
        txtfecConsultaActual.setVisible(false);
        txtIDConsulta.setVisible(false);
        jButPDF.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel14 = new javax.swing.JLabel();
        txtExpCM = new javax.swing.JTextField();
        txtfecConsultaActual = new javax.swing.JTextField();
        jComboConsulta = new javax.swing.JComboBox<>();
        jLabel23 = new javax.swing.JLabel();
        txtPresion = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        txtPeso = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textADiagn = new javax.swing.JTextArea();
        jPanelReceta = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        txtId_Consul = new javax.swing.JTextField();
        jComboMedicamento = new javax.swing.JComboBox<>();
        jLabel27 = new javax.swing.JLabel();
        jComboTratamiento = new javax.swing.JComboBox<>();
        jLabelLlenaTabla = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableReceta = new javax.swing.JTable();
        jLabelPDF = new javax.swing.JLabel();
        jLabelGuardaReceta = new javax.swing.JLabel();
        jButPDF = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabelGuardaConsulta = new javax.swing.JLabel();
        jLabelAbreReceta = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        dateChooserCombo1 = new datechooser.beans.DateChooserCombo();
        txtIDConsulta = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTxtAreaNotaMedica = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        txtEstatura = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtImc = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(245, 244, 243));
        setPreferredSize(new java.awt.Dimension(455, 658));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel14.setText("Consulta medica");
        add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 170, 30));
        add(txtExpCM, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 0, 50, 30));
        add(txtfecConsultaActual, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 0, 80, 30));

        jComboConsulta.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jComboConsulta.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pendiente", "Cita", "Al reglar" }));
        jComboConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboConsultaActionPerformed(evt);
            }
        });
        add(jComboConsulta, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 200, 90, 40));

        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel23.setText("CITA:");
        add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, 40, 40));

        txtPresion.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        add(txtPresion, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, 60, 40));

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel22.setText("T/A");
        add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 30, 40));

        txtPeso.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        add(txtPeso, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 40, 40, 40));

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel20.setText("PESO:");
        add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 40, 40, 40));

        jLabel24.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel24.setText("DIAGNOSTICO:");
        add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 100, 30));

        jScrollPane1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        textADiagn.setColumns(20);
        textADiagn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        textADiagn.setRows(5);
        jScrollPane1.setViewportView(textADiagn);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 90, 340, 50));

        jPanelReceta.setBackground(new java.awt.Color(245, 244, 243));
        jPanelReceta.setPreferredSize(new java.awt.Dimension(455, 485));
        jPanelReceta.setRequestFocusEnabled(false);
        jPanelReceta.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel21.setText("Receta Medica");
        jPanelReceta.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 0, 170, 30));

        jLabel26.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel26.setText("MEDICAMENTO:");
        jPanelReceta.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 110, 20));

        jLabel36.setText("ID_CONSULTA");
        jPanelReceta.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 10, 110, 30));

        txtId_Consul.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanelReceta.add(txtId_Consul, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 10, 60, 30));

        jComboMedicamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboMedicamentoActionPerformed(evt);
            }
        });
        jPanelReceta.add(jComboMedicamento, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 430, 30));

        jLabel27.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel27.setText("TRATAMIENTO:");
        jPanelReceta.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 120, 20));

        jComboTratamiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboTratamientoActionPerformed(evt);
            }
        });
        jPanelReceta.add(jComboTratamiento, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 430, 30));

        jLabelLlenaTabla.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelLlenaTabla.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/medicine.png"))); // NOI18N
        jLabelLlenaTabla.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabelLlenaTabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelLlenaTablaMouseClicked(evt);
            }
        });
        jPanelReceta.add(jLabelLlenaTabla, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 130, 50, 40));

        jTableReceta.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTableReceta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Medicamento", "Tratamiento"
            }
        ));
        jTableReceta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTableRecetaMousePressed(evt);
            }
        });
        jScrollPane3.setViewportView(jTableReceta);

        jPanelReceta.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 170, 450, 120));

        jLabelPDF.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelPDF.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/1480331244_print.png"))); // NOI18N
        jLabelPDF.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabelPDF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelPDFMouseClicked(evt);
            }
        });
        jPanelReceta.add(jLabelPDF, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 300, 50, 40));

        jLabelGuardaReceta.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelGuardaReceta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/save32x32.png"))); // NOI18N
        jLabelGuardaReceta.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabelGuardaReceta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelGuardaRecetaMouseClicked(evt);
            }
        });
        jPanelReceta.add(jLabelGuardaReceta, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 290, 50, 50));

        jButPDF.setText("jButton1");
        jButPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButPDFActionPerformed(evt);
            }
        });
        jPanelReceta.add(jButPDF, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, -1, -1));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/trash32px.png"))); // NOI18N
        jLabel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });
        jPanelReceta.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 300, 50, 40));

        add(jPanelReceta, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 310, -1, 350));

        jLabelGuardaConsulta.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelGuardaConsulta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/save32x32.png"))); // NOI18N
        jLabelGuardaConsulta.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabelGuardaConsulta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelGuardaConsultaMouseClicked(evt);
            }
        });
        add(jLabelGuardaConsulta, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 250, 50, 50));

        jLabelAbreReceta.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelAbreReceta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/recet48x48.png"))); // NOI18N
        jLabelAbreReceta.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabelAbreReceta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelAbreRecetaMouseClicked(evt);
            }
        });
        add(jLabelAbreReceta, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 250, 50, 50));

        jLabel31.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel31.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/exit.png"))); // NOI18N
        jLabel31.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel31MouseClicked(evt);
            }
        });
        add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 0, 30, 40));

        dateChooserCombo1.setCurrentView(new datechooser.view.appearance.AppearancesList("Swing",
            new datechooser.view.appearance.ViewAppearance("custom",
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    true,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 255),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(128, 128, 128),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(255, 0, 0),
                    false,
                    false,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                (datechooser.view.BackRenderer)null,
                false,
                true)));
    dateChooserCombo1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED,
        (java.awt.Color)null,
        (java.awt.Color)null,
        (java.awt.Color)null,
        (java.awt.Color)null));
dateChooserCombo1.setCalendarPreferredSize(new java.awt.Dimension(340, 230));
dateChooserCombo1.setFormat(2);
dateChooserCombo1.setWeekStyle(datechooser.view.WeekDaysStyle.FULL);
dateChooserCombo1.setFieldFont(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 13));
dateChooserCombo1.setNavigateFont(new java.awt.Font("Tahoma", java.awt.Font.BOLD, 13));
add(dateChooserCombo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 200, 120, 40));
add(txtIDConsulta, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 0, 50, 30));

jLabel2.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
jLabel2.setText("NOTA MEDICA:");
add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 90, 20));

jTxtAreaNotaMedica.setColumns(20);
jTxtAreaNotaMedica.setRows(5);
jScrollPane2.setViewportView(jTxtAreaNotaMedica);

add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 140, 340, 50));

jLabel3.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
jLabel3.setText("TALLA(cm)");
add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 40, 70, 40));

txtEstatura.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
txtEstatura.addFocusListener(new java.awt.event.FocusAdapter() {
    public void focusLost(java.awt.event.FocusEvent evt) {
        txtEstaturaFocusLost(evt);
    }
    });
    add(txtEstatura, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 40, 60, 40));

    jLabel4.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
    jLabel4.setText("IMC");
    add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 40, 40, 40));

    txtImc.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
    add(txtImc, new org.netbeans.lib.awtextra.AbsoluteConstraints(379, 40, 50, 40));

    jComboBox1.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
    jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "09", "10", "11", "12", "13", "14", "16", "17", "18", "19" }));
    add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 200, 50, 40));

    jComboBox2.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
    jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "05", "15", "25", "35", "45", "55" }));
    add(jComboBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 200, -1, 40));

    jLabel5.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
    jLabel5.setText("M:M");
    add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 200, 30, 40));

    jLabel6.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
    jLabel6.setText("H:H");
    add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 200, 30, 40));
    }// </editor-fold>//GEN-END:initComponents

    private void jComboConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboConsultaActionPerformed
        if("Cita".equals(jComboConsulta.getSelectedItem().toString()))
        {
            dateChooserCombo1.setVisible(true);
        }else
            dateChooserCombo1.setVisible(false);
    }//GEN-LAST:event_jComboConsultaActionPerformed

    private void jLabel31MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel31MouseClicked
        this.setVisible(false);
        this.disable();
    }//GEN-LAST:event_jLabel31MouseClicked

    private void jComboMedicamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboMedicamentoActionPerformed

    }//GEN-LAST:event_jComboMedicamentoActionPerformed

    private void jComboTratamientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboTratamientoActionPerformed

    }//GEN-LAST:event_jComboTratamientoActionPerformed

    private void jLabelLlenaTablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelLlenaTablaMouseClicked
        String var1=jComboMedicamento.getSelectedItem().toString();
        String var2=jComboTratamiento.getSelectedItem().toString();
        LlenaTabla(var1, var2);        // TODO add your handling code here:
    }//GEN-LAST:event_jLabelLlenaTablaMouseClicked

    private void jLabelGuardaRecetaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelGuardaRecetaMouseClicked
        Connection cn = con2.conexion();
// Obtener el número de filas del JTable
        dtm = (DefaultTableModel) jTableReceta.getModel();
        int filas = dtm.getRowCount();
        int column = dtm.getColumnCount();
        
        //indices para obtener los id's de medicamento y tratamiento
        String[] arregMedic = null, arregTratam = null;
        
        String[] array = null;
        ArrayList<String> arr = new ArrayList<String>();
        PreparedStatement pps = null;
//        JOptionPane.showMessageDialog(null,"numero de filas: "+filas+"\n numero de columnas: "+column);
        String nombre="";
      // Recorrer la tabla
    //  arr = fn.DevuelveID(0, civil, 0);
        for (int i = 0; i < filas ; i++){
            for (int j = 0; j < column; j++){
                // Se cargarían las variables para luego formar la sentencia INSERT
                // Por ejemplo
                nombre = jTableReceta.getValueAt(i,j).toString();
//Letrero e prueba      JOptionPane.showMessageDialog(null, nombre);
                if(j == 0)
                {   
                    arregMedic = fn.DevuelveID(1, nombre, 0);
//                    JOptionPane.showMessageDialog(null, "Cadena M -> "+nombre+" Id funcion: "+arregMedic[0]);
                }
                
                //arr.add(nombre);
//Letrero de prueba     System.out.print(arr.get(j)+"\t");
                if(j == 1)
                {
                    arregTratam = fn.DevuelveID(2, nombre, 0);
//                    JOptionPane.showMessageDialog(null, "Cadena T -> "+nombre+" Id funcion: "+arregTratam[0]);
                    try{
                        pps = cn.prepareStatement("INSERT INTO t_recetas(id_consultas,expediente,fecha,medicamento,tratamiento,prioridad) VALUES (?,?,?,?,?,?)");
                        pps.setString(1, txtId_Consul.getText());
                        pps.setString(2, txtExpCM.getText());
                        pps.setString(3, txtfecConsultaActual.getText());
                        pps.setString(4, arregMedic[0]);
                        pps.setString(5, arregTratam[0]);
                        pps.setInt(6, 1);
                        pps.executeUpdate();

                        band = true;

                    } catch (SQLException ex) {
                        band=false;
                        Logger.getLogger(JPanelConsulta.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    arr.clear();

                }
                // Aquí iría el INSERT para cada fila
            } // end for
        }
        
        if(band){
            jLabelPDF.setVisible(true);
            JOptionPane.showMessageDialog(null, "Datos Guardados");
            jButPDF.doClick();
        }else
            JOptionPane.showMessageDialog(null, "Error al insertar datos");
        
        for (int i = 0;filas>i; i++) {
            dtm.removeRow(0);
        }
    }//GEN-LAST:event_jLabelGuardaRecetaMouseClicked

    public void limpiatabla(){
        dtm = (DefaultTableModel) jTableReceta.getModel();
        int filas = dtm.getRowCount();
        int column = dtm.getColumnCount();
        for (int i = 0;filas>i; i++) {
            dtm.removeRow(0);
        }
    }
    
    private void jLabelGuardaConsultaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelGuardaConsultaMouseClicked
        Connection cn = con2.conexion();
        String datecho,estado="",fur="",fpp="",monto,test,exp,fechaProxCita,SQL,peso,diagnostico;//datecho
        SimpleDateFormat df = new SimpleDateFormat("yyyy/MM/dd");
        
        int citaI = 0;
        
        datecho = fn.volteaFecha(dateChooserCombo1.getText(),0);
     //   fur = fn.volteaFecha(dateChooserCombo3.getText(),0);
//        fpp = fn.volteaFecha(dateChooserCombo2.getText(),0);
//        JOptionPane.showMessageDialog(null, "feha: "+datecho);
        peso = txtPeso.getText();
        diagnostico = textADiagn.getText();
        
        if(dateChooserCombo1.isVisible())
            test = dateChooserCombo1.getText();
    //        test = String.valueOf(df.format(jDateChooserFechProxima.getDate()));
        else
            test = null;
        
// Letrero de prueba        JOptionPane.showMessageDialog(null,"fecha:"+test);
        exp = txtExpCM.getText();
        citaI = jComboConsulta.getSelectedIndex();
  //      fechaProxCita = fn.getFecha(jDateChooserFechProxima);
        PreparedStatement pps = null;
        
        if(exp.isEmpty() || peso.isEmpty() || diagnostico.isEmpty()){
            JOptionPane.showMessageDialog(null,"Campos vacios peso = ?, diagnostico = ?");
        }else{
            if(!id_Consulta.isEmpty() && fn.ValidaConsultaBool(id_Consulta))
            {
//                JOptionPane.showMessageDialog(null, "ln-525. Ya existe!!!"+id_Consulta);
/*                
SQL="UPDATE consulta SET expediente='"+exp+"' ,peso='"+txtPeso.getText()+"',presion='"+txtPresion.getText()+"',tipo='"+cita+"',fecha='"+test+"',diagnostico='"+
textADiagn.getText()+"',fechaAct='"+txtfecConsultaActual.getText()+"',estado='"+estado+"',monto='"+monto+"',fur='"+fur+"',fpp='"+fpp+"' WHERE id_Consulta = '"+id_Consulta+"'";
*/             
//String query = "update users set num_points = ? where first_name = ?";
String query2= "UPDATE t_consultas SET expediente =?,fecha=?,peso=?,estatura=?,TA =?,diagnostico=?,notaMedica=?,cita=?,fechacita=? WHERE id_consultas = '"+id_Consulta+"'";                
                try {
            //        cn.setAutoCommit(false);
//                System.out.println(query2);
                pps = cn.prepareStatement(query2);
                
                pps.setString(1, exp);
                pps.setString(2, txtfecConsultaActual.getText());
                pps.setString(3, peso);
                pps.setString(4, txtEstatura.getText());
                pps.setString(5, txtPresion.getText());        
                pps.setString(6, diagnostico);
                pps.setString(7, jTxtAreaNotaMedica.getText());
                pps.setInt(8, citaI);
                
                if(citaI == 1)
                    pps.setString(9, datecho);
                else
                    pps.setString(9, null);
                    
              //      cn.commit();

                pps.executeUpdate();
                JOptionPane.showMessageDialog(null, "Datos actualizados");
                jLabelGuardaReceta.setVisible(true);
                jLabelLlenaTabla.setVisible(true);
                //id_Consulta="";
                }catch (SQLException e){
                    JOptionPane.showMessageDialog(null, "Error en la transaccion \t Caracter incorrecto");
                    Logger.getLogger(JPanelConsulta.class.getName()).log(Level.SEVERE, null, e);
                }finally{
//                    System.out.println( "cierra conexion a la base de datos" );    
                    try {
                        if(pps != null) pps.close();
                        if(cn != null) cn.close();
//                        if(cn !=null) cn.close();
                    } catch (SQLException ex) {
                        System.err.println( ex.getMessage() );    
                    }
                }
            }else{           
            
            try{
                pps = cn.prepareStatement("INSERT INTO t_consultas (expediente,fecha,peso,estatura,TA,diagnostico,notaMedica,cita,fechacita) VALUES (?,?,?,?,?,?,?,?,?)");
                pps.setString(1, exp);
                pps.setString(2, txtfecConsultaActual.getText());
                pps.setString(3, peso);
                pps.setString(4, txtEstatura.getText());
                pps.setString(5, txtPresion.getText());
                pps.setString(6, diagnostico);
                pps.setString(7, jTxtAreaNotaMedica.getText());
                
                pps.setInt(8, citaI);
                
                if(citaI == 1)
                    pps.setString(9, datecho);
                else
                    pps.setString(9, null);
                
                pps.executeUpdate();                
                JOptionPane.showMessageDialog(null, "Datos Guardados");
//                limpiarConsulta();
//                mostrarTabla1("");
            jLabelAbreReceta.setVisible(true);
            jLabelGuardaReceta.setVisible(true);

                jLabelLlenaTabla.setVisible(true);
                
            //prueba de no sobreescribir
            id_Consulta = Integer.toString(ultimoRegistroConsulta());
            
            } catch (SQLException ex) {
                Logger.getLogger(JPanelConsulta.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Error en la transaccion \t Caracter incorrecto");
            }finally{
//                System.out.println( "cierra conexion a la base de datos" );    
                try {
                    if(pps != null) pps.close();                
                    if(cn !=null) cn.close();
                } catch (SQLException ex) {
                    System.err.println( ex.getMessage() );    
                }
             }
        }
            
        }
    }//GEN-LAST:event_jLabelGuardaConsultaMouseClicked

    private void jLabelAbreRecetaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelAbreRecetaMouseClicked
        dtm = (DefaultTableModel) jTableReceta.getModel();
        int filas = dtm.getRowCount();
        int column = dtm.getColumnCount();


        jPanelReceta.setVisible(true);
        txtId_Consul.setText(Integer.toString(ultimoRegistroConsulta()));//obtener el ID de la ultima consulta realizada 
        jLabelLlenaTabla.setVisible(true);
        jLabelGuardaReceta.setVisible(true);
        jLabelPDF.setVisible(false);
        
        for (int i = 0;filas>i; i++) {
            dtm.removeRow(0);
        }
        
        
    }//GEN-LAST:event_jLabelAbreRecetaMouseClicked

    private void jLabelPDFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelPDFMouseClicked
    rp.RecetaParam(txtId_Consul.getText());            // TODO add your handling code here:
    }//GEN-LAST:event_jLabelPDFMouseClicked

    private void jTableRecetaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableRecetaMousePressed
        DefaultTableModel dtm = (DefaultTableModel) jTableReceta.getModel(); //TableProducto es el nombre de mi tabla ;)
        dtm.removeRow(jTableReceta.getSelectedRow());
    }//GEN-LAST:event_jTableRecetaMousePressed

    private void jButPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButPDFActionPerformed
        rp.RecetaParam(txtId_Consul.getText());
    }//GEN-LAST:event_jButPDFActionPerformed

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        String var = txtId_Consul.getText();

        dtm = (DefaultTableModel) jTableReceta.getModel();
        int filas = dtm.getRowCount();
        int column = dtm.getColumnCount();

        if(fn.ValidaRecetaConsul(var))
        {
            Connection cn = con2.conexion();
            PreparedStatement preparedStmt = null;
            if(!var.isEmpty()){

                int dialogButton = JOptionPane.YES_NO_OPTION;
                int dialogResult = JOptionPane.showConfirmDialog (null, "Seguro que desea eliminar la receta:"+var,"Borrar",dialogButton);
                if(dialogResult == JOptionPane.YES_OPTION){
                    try {
                        String query = "delete from t_recetas where id_consultas = '"+var+"' ";
                        preparedStmt = cn.prepareStatement(query);
                        preparedStmt.execute();

                        JOptionPane.showMessageDialog(null, "Eliminado");

                        jLabelGuardaReceta.setVisible(true);
                        jLabelLlenaTabla.setVisible(true);

                    } catch (SQLException ex) {
                        Logger.getLogger(JPanelConsulta.class.getName()).log(Level.SEVERE, null, ex);
                    }finally{
                        try {
                            if(preparedStmt != null) preparedStmt.close();
                            if(cn !=null) cn.close();
                        } catch (SQLException ex) {
                            System.err.println(ex.getMessage());
                            //                System.out.println("Error al cerrar la conexon");
                        }//catch
                    }//finally
                } else {
                    JOptionPane.showMessageDialog(null,"No se borro la receta: "+var);
                }
            }else
            JOptionPane.showMessageDialog(null,"No selecciono nada");
        }else
        JOptionPane.showMessageDialog(null,"No existe receta de la consulta: "+var);

                for (int i = 0;filas>i; i++) {
            dtm.removeRow(0);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel1MouseClicked

    private void txtEstaturaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEstaturaFocusLost
        String pes = txtPeso.getText();
        String est = txtEstatura.getText();
        
        if(pes.isEmpty() || est.isEmpty()){
            JOptionPane.showMessageDialog(null,"Campo PESO ? ó TALLA ?");
            
        }else
            txtImc.setText(Float.toString(fn.calcImc(pes, est)));
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEstaturaFocusLost

    private Date cargafecha(){
        //DateFormat df = new SimpleDateFormat("dd/MM/yyyy");
        Date fechaAct = new Date();
//        jDateChooser1.setDate(fechaAct);
        return fechaAct;
    }
    
/*
    public void llenacomboCostos(){
        Connection cn = con2.conexion();
        jComboMonto.removeAllItems();
        String consul = "SELECT precio from cobros";
        int i = 1;
        Statement st = null;
        ResultSet rs = null;
        try {
            st = cn.createStatement();
            rs = st.executeQuery(consul);
            while(rs.next()){
                jComboMonto.addItem(rs.getString(i));
            }
        } catch (SQLException ex) {
            Logger.getLogger(JPanelAltaPacientes.class.getName()).log(Level.SEVERE, null, ex);
        }finally{
                    System.out.println( "cierra conexion a la base de datos" );    
                    try {
                        if(st != null) st.close();
                        if(cn != null) cn.close();
//                        if(cn !=null) cn.close();
                    } catch (SQLException ex) {
                        System.err.println( ex.getMessage() );    
                    }
                }
    }
*/
    
    //***METODOS PARA PANELRECETA*******
    public void llenacomboMedicamento(){
        Connection cn = con2.conexion();
        String consul = "SELECT nombre from c_medicamentos order by nombre asc";
        jComboMedicamento.removeAllItems();
        int i = 1;
        Statement st = null;
        ResultSet rs = null;
        try {
            st = cn.createStatement();
            rs = st.executeQuery(consul);
            while(rs.next()){
                jComboMedicamento.addItem(rs.getString(i));
            }
        } catch (SQLException ex) {
            Logger.getLogger(JPanelConsulta.class.getName()).log(Level.SEVERE, null, ex);
        }finally{
//             System.out.println( "cierra conexion a la base de datos" );    
             try {
                if(st != null) st.close();
                if(rs != null) rs.close();
                if(cn !=null) cn.close();
             } catch (SQLException ex) {
                System.err.println( ex.getMessage() );    
             }
         }
    }
    
    public void llenacomboTratamiento(){
        Connection cn = con2.conexion();
        String consul = "SELECT nombre from c_tratamientos order by nombre asc";
        jComboTratamiento.removeAllItems();
        int i = 1;
        Statement st = null;
        ResultSet rs = null;
        try {
            st = cn.createStatement();
            rs = st.executeQuery(consul);
            while(rs.next()){
                jComboTratamiento.addItem(rs.getString(i));
            }
        } catch (SQLException ex) {
            Logger.getLogger(JPanelConsulta.class.getName()).log(Level.SEVERE, null, ex);
        }finally{
 //            System.out.println( "cierra conexion a la base de datos" );    
             try {
                if(rs != null) rs.close();
                if(st != null) st.close();                
                if(cn !=null) cn.close();
             } catch (SQLException ex) {
                System.err.println( ex.getMessage() );    
             }
         }
    }
    
    

    void LlenaTabla(String medicamento, String tratamiento){
        
        Object [] fila=new Object[2];
        fila[0]=medicamento;
        fila[1]=tratamiento;
        dtm.addRow(fila);
        jTableReceta.setModel(dtm);
    }
        
    private int ultimoRegistroConsulta(){
        Connection cn = con2.conexion();
        String ultimo="";
        int num=0,i=1;
        String sql = "SELECT id_consultas FROM t_consultas ORDER BY id_consultas DESC LIMIT 1";
        Statement st = null;
        ResultSet rs= null;
        
        try {
            st = cn.createStatement();
            rs = st.executeQuery(sql);
            rs.beforeFirst();
            while(rs.next())
            {
                ultimo = rs.getString(1);
//                System.out.println(ultimo);
            }
        } catch (SQLException ex) {
            Logger.getLogger(JPanelConsulta.class.getName()).log(Level.SEVERE, null, ex);
        }finally{
//             System.out.println( "cierra conexion a la base de datos" );    
             try {
                 if(rs != null) rs.close();               
                 if(st != null) st.close();                
                 if(cn !=null) cn.close();
             } catch (SQLException ex) {
                 System.err.println( ex.getMessage() );    
             }
         }
        num=Integer.parseInt(ultimo);
        
        return num;
    }
    
 /*       private void agregarOyente() {
        dateChooserCombo1.getDayChooser().addPropertyChangeListener(
                new java.beans.PropertyChangeListener() {
                    @Override
                    public void propertyChange(java.beans.PropertyChangeEvent evt) {
                        if (evt.getPropertyName().compareTo("day") == 0) {
                            SimpleDateFormat formatoDeFecha = new SimpleDateFormat("yyyy/MM/dd");
                                fech=formatoDeFecha.format(jCalendarProximas.getDate());
                                
                                txtCitas.setText(fech);
//                                String sql = "SELECT a.expediente,a.nombre,a.paterno,a.materno FROM paciente a, consulta b WHERE '"+fech+"' = b.fecha and b.expediente=a.expediente ";
                                mostrarTabla(fech);
                            
                                
//Letrero de pruebas    JOptionPane.showMessageDialog(null,formatoDeFecha.format(jCalendarProximas.getDate()));
                        }
                    }
                });
    }
*/
     
     public void RealizaConsulta(String idConsul){
        String factual="",fproximacita="";
        
//        JOptionPane.showMessageDialog(null, "id_Consulta:"+idConsul);
        Date dt = null;
        Connection cn = con2.conexion();
        Calendar cal  = Calendar.getInstance();

        String consul = "SELECT * FROM t_consultas WHERE id_consultas = '"+idConsul+"'";
        String est ="",notM="",ps="";
        
//        System.out.println("Consulta: "+consul);
        Statement st;
        try {
            st = cn.createStatement();
            ResultSet rs = st.executeQuery(consul);
            while(rs.next()){
//            System.out.println(rs.getString(1));
                
            txtExpCM.setText(rs.getString(2));
//            System.out.println(rs.getString(2));
            
            factual=rs.getString(3).replace('-', '/');
            txtfecConsultaActual.setText(factual);
             
            ps = rs.getString(4);
            txtPeso.setText(ps);
//            System.out.println(rs.getString(4));           
            
            est=rs.getString(5);
            if(est != null){
                txtEstatura.setText(est);
                txtImc.setText(Float.toString(fn.calcImc(ps,est)));
            }else{
                txtEstatura.setText("N/A");
                txtImc.setText("N/A");
            }            
            txtPresion.setText(rs.getString(6));
//            System.out.println(rs.getString(5));
            
/**     BORRADO FUR
 * fultimaregla=rs.getString(6).replace('-', '/');
                try {
                dt=formato.parse(fultimaregla);
                } catch (ParseException ex) {
                    Logger.getLogger(JPanelConsulta.class.getName()).log(Level.SEVERE, null, ex);
                }
                cal.setTime(dt);
                dateChooserCombo3.setSelectedDate(cal);
   **/             
            textADiagn.setText(rs.getString(7));

            
            notM = rs.getString(8);
            if(notM != null){
                jTxtAreaNotaMedica.setText(notM);            
            }else{
                jTxtAreaNotaMedica.setText("N/A");
            }
                
            jComboConsulta.setSelectedIndex(Integer.parseInt(rs.getString(9)));
//            System.out.println(rs.getString(8));
                
            fproximacita=rs.getString(10);
            if(fproximacita != null)
            {
            fproximacita=fproximacita.replace('-', '/');
                try {
                    dt=formato.parse(fproximacita);
                    } catch (ParseException ex) {
                        Logger.getLogger(JPanelConsulta.class.getName()).log(Level.SEVERE, null, ex);
                    }
                
                cal.setTime(dt);
                dateChooserCombo1.setSelectedDate(cal);
            }else{
        //        dateChooserCombo1.setEnabled(false);
            }
            
   /*         if(!ps.isEmpty() && !est.isEmpty()){
                txtImc.setText("N/A");
            }else{
                txtImc.setText(Float.toString(fn.calcImc(ps, est)));
            }
     */       }
            st.close();
            cn.close();
        } catch (SQLException ex) {
            Logger.getLogger(JPanelConsulta.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
     
    
     public void ConsultaReceta(String idConsul){
        jPanelReceta.setVisible(true);
        Connection cn = con2.conexion();
         
        DefaultTableModel modelo = new DefaultTableModel(){ 
            @Override
            public boolean isCellEditable (int fila, int columna) {
                return false;
            }
        };
        
        String consul = "SELECT medicamento,tratamiento from t_recetas WHERE id_consultas = '"+idConsul+"'"; 

        modelo.addColumn("Medicamento");
        modelo.addColumn("Tratamiento");

        jTableReceta.setModel(modelo);
        
 //       System.out.println("Consulta: "+consul);
        String datos[] =  new String[2];
        Statement st = null;
        ResultSet rs = null;
        try {
            st = cn.createStatement();
            rs = st.executeQuery(consul);
            while(rs.next()){
                datos[0] = rs.getString(1);
                datos[1] = rs.getString(2);

                modelo.addRow(datos);
            }
            jTableReceta.setModel(modelo);
        } catch (SQLException ex) {
            Logger.getLogger(JPanelConsulta.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
     
     public void limpiaCampos(){
        txtPeso.setText("");
        txtPresion.setText("");
        textADiagn.setText("");
        id_Consulta="";
        txtEstatura.setText("");
        txtImc.setText("");
        jTxtAreaNotaMedica.setText("");
    }
     
    public void OcultaBotones(){
        jLabelGuardaConsulta.setVisible(false);
        jLabelGuardaReceta.setVisible(false);
        jLabelAbreReceta.setVisible(false);
        jLabelLlenaTabla.setVisible(false);
    }     
  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    public datechooser.beans.DateChooserCombo dateChooserCombo1;
    private javax.swing.JButton jButPDF;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboConsulta;
    private javax.swing.JComboBox<String> jComboMedicamento;
    private javax.swing.JComboBox<String> jComboTratamiento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    public javax.swing.JLabel jLabelAbreReceta;
    private javax.swing.JLabel jLabelGuardaConsulta;
    public javax.swing.JLabel jLabelGuardaReceta;
    public javax.swing.JLabel jLabelLlenaTabla;
    public javax.swing.JLabel jLabelPDF;
    public javax.swing.JPanel jPanelReceta;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTableReceta;
    public javax.swing.JTextArea jTxtAreaNotaMedica;
    private javax.swing.JTextArea textADiagn;
    public javax.swing.JTextField txtEstatura;
    public javax.swing.JTextField txtExpCM;
    public javax.swing.JTextField txtIDConsulta;
    public javax.swing.JTextField txtId_Consul;
    public javax.swing.JTextField txtImc;
    private javax.swing.JTextField txtPeso;
    private javax.swing.JTextField txtPresion;
    public javax.swing.JTextField txtfecConsultaActual;
    // End of variables declaration//GEN-END:variables
}
