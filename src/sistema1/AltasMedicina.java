/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sistema1;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author Maquina53
 */
public class AltasMedicina extends javax.swing.JPanel {

    int x,y;
    ConexionDBOriginal con2 = new ConexionDBOriginal();
    //Connection cn = con.conexion();
    String atributo = "",modifVar="",se√±al="";
    
    public AltasMedicina() {
        initComponents();
        jButActualizar.setEnabled(false);
//        llenacombo(); 
    jRadioPrecios.setVisible(false);
        jTable1.setFont(new java.awt.Font("Tahoma", 0, 14));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        ItemModificar = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        ItemEliminar = new javax.swing.JMenuItem();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel14 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        txtDescripcion = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jRadioMedicam = new javax.swing.JRadioButton();
        jRadioTratam = new javax.swing.JRadioButton();
        jRadioCivil = new javax.swing.JRadioButton();
        txtBusqueda = new javax.swing.JTextField();
        jButActualizar = new javax.swing.JButton();
        jRadioFamily = new javax.swing.JRadioButton();
        jRadioPrecios = new javax.swing.JRadioButton();

        ItemModificar.setText("Modificar");
        ItemModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItemModificarActionPerformed(evt);
            }
        });
        jPopupMenu1.add(ItemModificar);
        jPopupMenu1.add(jSeparator3);

        ItemEliminar.setText("Eliminar");
        ItemEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItemEliminarActionPerformed(evt);
            }
        });
        jPopupMenu1.add(ItemEliminar);

        setBackground(new java.awt.Color(245, 244, 243));
        setMinimumSize(new java.awt.Dimension(450, 970));
        setPreferredSize(new java.awt.Dimension(460, 658));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("ALTA DE MEDICAMENTO, TRATAMIENTO, ESTADO CIVIL Y FAMILIARES.");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 460, 40));
        add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, 400, 10));

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setText("ELIJA QUE DESA DAR DE ALTA");
        add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, 190, 30));

        jComboBox1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Medicamento", "Tratamiento", "Estado Civil", "Familiares" }));
        jComboBox1.setNextFocusableComponent(txtDescripcion);
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 60, 200, 40));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("MOSTRAR/BUSCAR");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 180, 30));
        add(txtDescripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, 400, 40));

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton1.setText("GUARDAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 180, 110, 40));
        add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 240, 400, 10));

        jScrollPane1.setAutoscrolls(true);
        jScrollPane1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_LAST_COLUMN);
        jTable1.setComponentPopupMenu(jPopupMenu1);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable1MouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 450, -1, 200));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("DESCRIPCION");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 130, 30));

        buttonGroup1.add(jRadioMedicam);
        jRadioMedicam.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jRadioMedicam.setText("MEDICAMENTO");
        jRadioMedicam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioMedicamActionPerformed(evt);
            }
        });
        add(jRadioMedicam, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 290, 170, 30));

        buttonGroup1.add(jRadioTratam);
        jRadioTratam.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jRadioTratam.setText("TRATAMIENTO");
        jRadioTratam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioTratamActionPerformed(evt);
            }
        });
        add(jRadioTratam, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 290, 150, 30));

        buttonGroup1.add(jRadioCivil);
        jRadioCivil.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jRadioCivil.setText("ESTADO CIVIL");
        jRadioCivil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioCivilActionPerformed(evt);
            }
        });
        add(jRadioCivil, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 330, 170, 30));

        txtBusqueda.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtBusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBusquedaKeyPressed(evt);
            }
        });
        add(txtBusqueda, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 410, 390, 30));

        jButActualizar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButActualizar.setText("ACTUALIZAR");
        jButActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButActualizarActionPerformed(evt);
            }
        });
        add(jButActualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 180, 120, 40));

        buttonGroup1.add(jRadioFamily);
        jRadioFamily.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jRadioFamily.setText("FAMILIARES");
        jRadioFamily.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioFamilyActionPerformed(evt);
            }
        });
        add(jRadioFamily, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 330, 150, 30));

        buttonGroup1.add(jRadioPrecios);
        jRadioPrecios.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jRadioPrecios.setText("PRECIOS");
        jRadioPrecios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioPreciosActionPerformed(evt);
            }
        });
        add(jRadioPrecios, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 370, 130, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Connection cn = con2.conexion();
        String var = jComboBox1.getSelectedItem().toString(),desc=txtDescripcion.getText(),sql="";
        PreparedStatement pps = null;
        if(desc.isEmpty())
            JOptionPane.showMessageDialog(null,"Campo vacio");
        else{
        if(var.equals("Medicamento")){
            sql = "INSERT INTO c_medicamentos (nombre,status) VALUES (?,?)";
        }
        
        if(var.equals("Tratamiento")){
            sql = "INSERT INTO c_tratamientos (nombre,status) VALUES (?,?)";
        }
        
        if(var.equals("Estado Civil")){
            sql = "INSERT INTO c_estadosciviles (nombre,status) VALUES (?,?)";
        }
        
        if(var.equals("Familiares")){
            sql = "INSERT INTO c_familiares (nombre,status) VALUES (?,?)";
        }
        
        if(var.equals("Cobros")){
            sql = "INSERT INTO cobros (precio) VALUES (?)";
        }
        try {
            pps = cn.prepareStatement(sql);        // TODO add your handling code here:
            pps.setString(1,desc);
            pps.setBoolean(2, true);
                  
            
            pps.executeUpdate();

            JOptionPane.showMessageDialog(null, "Datos Guardados");

            mostrarTabla("");
            txtDescripcion.setText("");
        } catch (SQLException ex) {
            Logger.getLogger(AltasMedicina.class.getName()).log(Level.SEVERE, null, ex);
        }finally{
//                    System.out.println( "cierra conexion a la base de datos" );    
                    try {
                        if(pps != null) pps.close();
                        if(cn != null) cn.close();
//                        if(cn !=null) cn.close();
                    } catch (SQLException ex) {
                        System.err.println( ex.getMessage() );    
                    }
                }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtBusquedaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBusquedaKeyPressed
    String pal = txtBusqueda.getText();
    
    if(jRadioMedicam.isSelected()){
        atributo="c_medicamentos";
        mostrarTabla2(pal,"nombre");
    }
    
    if(jRadioTratam.isSelected()){
        atributo="c_tratamientos";
        mostrarTabla2(pal," nombre");
    }
    
    if(jRadioCivil.isSelected()){
        atributo="c_estadosciviles";
        mostrarTabla2(pal,"nombre");
    }
        
    if(jRadioFamily.isSelected()){
        atributo="c_familiares";
        mostrarTabla2(pal, "nombre");
    }
    
    if(jRadioPrecios.isSelected()){
        atributo="cobros";
        mostrarTabla2(pal, "precio");
    }
    
    }//GEN-LAST:event_txtBusquedaKeyPressed

    private void jTable1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseReleased
        if(evt.isPopupTrigger())
        {
            jPopupMenu1.show(evt.getComponent(),evt.getX(),evt.getY());
        }
    }//GEN-LAST:event_jTable1MouseReleased

    private void ItemModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItemModificarActionPerformed
        int fila = jTable1.getSelectedRow();
        if(fila >= 0)
        {
            modifVar = jTable1.getValueAt(fila,0).toString();
            txtDescripcion.setText(jTable1.getValueAt(fila,1).toString());
            jButton1.setEnabled(false);
            jButActualizar.setEnabled(true);
        }else{
            JOptionPane.showMessageDialog(null,"No selecciono nada");
        }
    }//GEN-LAST:event_ItemModificarActionPerformed

    private void jRadioMedicamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioMedicamActionPerformed
        atributo="c_medicamentos";
        jComboBox1.setSelectedIndex(0);
        mostrarTabla2("","nombre");
    }//GEN-LAST:event_jRadioMedicamActionPerformed

    private void jRadioTratamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioTratamActionPerformed
        atributo="c_tratamientos";
        jComboBox1.setSelectedIndex(1);
        mostrarTabla2("","nombre");
    }//GEN-LAST:event_jRadioTratamActionPerformed

    private void jRadioCivilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioCivilActionPerformed
        atributo="c_estadosciviles";
        jComboBox1.setSelectedIndex(2);
        mostrarTabla2("","nombre");
    }//GEN-LAST:event_jRadioCivilActionPerformed

    private void ItemEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItemEliminarActionPerformed
        int fila = jTable1.getSelectedRow();
        if(fila >= 0)
        {
            String val = jTable1.getValueAt(fila,0).toString();
            if(jRadioMedicam.isSelected())
            {
                atributo="c_medicamentos";
                elimina("clave",val);
                mostrarTabla2("","nombre");
            
            }
    
            if(jRadioTratam.isSelected())
            {
                atributo="c_tratamientos";
                elimina("clave",val);
                mostrarTabla2("","nombre");
        
            }
    
            if(jRadioCivil.isSelected())
            {
                atributo="c_estadosciviles";
                elimina("clave",val);
                mostrarTabla2("","nombre");
            }
            
            if(jRadioFamily.isSelected())
            {
                atributo="c_familiares";
                elimina("clave", val);
                mostrarTabla2("", "nombre");
            }
            
            if(jRadioPrecios.isSelected())
            {
                atributo="cobros";
                elimina("id_cobro", val);
                mostrarTabla2("", "precio");
            }
        }else{
            JOptionPane.showMessageDialog(null,"No selecciono nada");
        }
    }//GEN-LAST:event_ItemEliminarActionPerformed

    private void jButActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButActualizarActionPerformed
//        JOptionPane.showMessageDialog(null, "MODIFICAR = "+atributo);
        String cadNueva=txtDescripcion.getText();
        
        if(cadNueva.isEmpty())
            JOptionPane.showMessageDialog(null, "Campo vacio");
        else
        {
        Connection cn = con2.conexion();

        PreparedStatement pps = null;
        String campo1="",campo2="",query="";
        
        if(atributo.equals("c_medicamentos"))
        {
            campo1="clave";
            campo2="nombre";
        }
        
        if(atributo.equals("c_tratamientos"))
        {
            campo1="clave";
            campo2="nombre";
        }
        
        if(atributo.equals("c_estadosciviles"))
        {
            campo1="clave";
            campo2="nombre";
        }
        
        if(atributo.equals("c_familiares"))
        {
            campo1="clave";
            campo2="nombre";
        }
        
        if(atributo.equals("cobros"))
        {
            campo1="id_cobro";
            campo2="precio";
        }
                      
//String query = "update users set num_points = ? where first_name = ?";
        query= "UPDATE "+atributo+" SET "+campo2+" =? WHERE "+campo1+" = '"+modifVar+"'";                
//        JOptionPane.showMessageDialog(null, "QUERY = "+query);
        try {
            //        cn.setAutoCommit(false);
//                System.out.println(query);
                pps = cn.prepareStatement(query);
                
                pps.setString(1, cadNueva);

                pps.executeUpdate();
                JOptionPane.showMessageDialog(null, "Datos actualizados");
                //id_Consulta="";
                jButton1.setEnabled(true);
                jButActualizar.setEnabled(false);
                mostrarTabla("");
                txtDescripcion.setText("");
                }catch (SQLException e){
                    Logger.getLogger(AltasMedicina.class.getName()).log(Level.SEVERE, null, e);
                }finally{
//                    System.out.println( "cierra conexion a la base de datos" );    
                    try {
                        if(pps != null) pps.close();
                        if(cn != null) cn.close();
//                        if(cn !=null) cn.close();
                    } catch (SQLException ex) {
                        System.err.println( ex.getMessage() );    
                    }
                }
        }
        
    }//GEN-LAST:event_jButActualizarActionPerformed

    private void jRadioFamilyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioFamilyActionPerformed
        atributo="c_familiares";
        jComboBox1.setSelectedIndex(3);
        mostrarTabla2("","nombre");        
    }//GEN-LAST:event_jRadioFamilyActionPerformed

    private void jRadioPreciosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioPreciosActionPerformed
        atributo="cobros";
        mostrarTabla2("","precio");        
       // TODO add your handling code here:
    }//GEN-LAST:event_jRadioPreciosActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        int var = jComboBox1.getSelectedIndex();
        
        if(var == 0)
        {
            jRadioMedicam.doClick();
            txtDescripcion.setText("");
        }
        if(var == 1)
        {
            jRadioTratam.doClick();
            txtDescripcion.setText("");
        }
        
        if(var == 2)
        {
            jRadioCivil.doClick();
            txtDescripcion.setText("");
        }
        
        if(var == 3)
        {
            txtDescripcion.setText("");
            jRadioFamily.doClick();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    
    void elimina(String campo,String var){
        Connection cn = con2.conexion();
        PreparedStatement preparedStmt = null;
        try {
                String query = "delete from "+atributo+" where "+campo+" = "+var+" ";
//                System.out.println(query);
                preparedStmt = cn.prepareStatement(query);
            //preparedStmt.setInt(1, 3);

      // execute the preparedstatement
            preparedStmt.execute();
      
//            cn.close();
            JOptionPane.showMessageDialog(null, "Eliminado");


        } catch (SQLException ex) {
            Logger.getLogger(AltasMedicina.class.getName()).log(Level.SEVERE, null, ex);
        }finally{
//                    System.out.println( "cierra conexion a la base de datos" );    
                    try {
                        if(preparedStmt != null) preparedStmt.close();
                        if(cn != null) cn.close();
//                        if(cn !=null) cn.close();
                    } catch (SQLException ex) {
                        System.err.println( ex.getMessage() );    
                    }
                }
        
    }
    
    
void mostrarTabla2(String var,String campo){
        Connection cn = con2.conexion();
        DefaultTableModel modelo = new DefaultTableModel();
        TableColumn columna;
        String consul="";
        
        modelo.addColumn("ID");
        modelo.addColumn("NOMBRE");
        
        jTable1.setModel(modelo);

        TableColumnModel columnModel = jTable1.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(15);
        columnModel.getColumn(1).setPreferredWidth(50);
        
        jTable1.getColumnModel().getColumn(0).setMaxWidth(0);
        jTable1.getColumnModel().getColumn(0).setMinWidth(0);
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(0);


        if(var.equals(""))
        {
            consul = "SELECT * FROM "+atributo+" ORDER BY nombre ASC";
        }else{
         
            consul = "SELECT * FROM "+atributo+" WHERE "+campo+" LIKE '%"+var+"%' ORDER BY nombre ASC";
//        System.out.println(consul);
        }
        String datos[] =  new String[2];
        Statement st = null;
        ResultSet rs = null;
        try {
            st = cn.createStatement();
            rs = st.executeQuery(consul);
            while(rs.next()){
//                registros++;
                datos[0] =rs.getString(1);
                datos[1] = rs.getString(2);
            
                modelo.addRow(datos);
            }
            jTable1.setModel(modelo);
        } catch (SQLException ex) {
            Logger.getLogger(AltasMedicina.class.getName()).log(Level.SEVERE, null, ex);
        }finally{
//                    System.out.println( "cierra conexion a la base de datos" );    
                    try {
                        if(st != null) st.close();
                        if(rs != null) rs.close();
                        if(cn != null) cn.close();
//                        if(cn !=null) cn.close();
                    } catch (SQLException ex) {
                        System.err.println( ex.getMessage() );    
                    }
                }
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem ItemEliminar;
    private javax.swing.JMenuItem ItemModificar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButActualizar;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JRadioButton jRadioCivil;
    private javax.swing.JRadioButton jRadioFamily;
    private javax.swing.JRadioButton jRadioMedicam;
    private javax.swing.JRadioButton jRadioPrecios;
    private javax.swing.JRadioButton jRadioTratam;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtBusqueda;
    private javax.swing.JTextField txtDescripcion;
    // End of variables declaration//GEN-END:variables

    void llenacombo(){
        Connection cn = con2.conexion();
        jComboBox1.removeAllItems();
        String consul = "SELECT descripcion from medicamento";
        int i = 1;
        Statement st = null;
        ResultSet rs = null;
        try {
            st = cn.createStatement();
            rs = st.executeQuery(consul);
            while(rs.next()){
                jComboBox1.addItem(rs.getString(i));
            }
        } catch (SQLException ex) {
            Logger.getLogger(AltasMedicina.class.getName()).log(Level.SEVERE, null, ex);
        }finally{
//                    System.out.println( "cierra conexion a la base de datos" );    
                    try {
                        if(st != null) st.close();
                        if(rs != null) rs.close();
                        if(cn != null) cn.close();
//                        if(cn !=null) cn.close();
                    } catch (SQLException ex) {
                        System.err.println( ex.getMessage() );    
                    }
                }
    }
    
    
    void mostrarTabla(String var){
        Connection cn = con2.conexion();
        DefaultTableModel modelo = new DefaultTableModel();
        String consul="",   table = jComboBox1.getSelectedItem().toString();
        TableColumn columna;
        
        modelo.addColumn("ID");
        modelo.addColumn("NOMBRE");
        
        jTable1.setModel(modelo);
        columna = jTable1.getColumn("ID");
        columna.setPreferredWidth(5);
        
        jTable1.getColumnModel().getColumn(0).setMaxWidth(0);
        jTable1.getColumnModel().getColumn(0).setMinWidth(0);
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(0);


        if(table.equals("Medicamento"))
        {
            consul = "SELECT * from c_medicamentos";
        }
        if(table.equals("Tratamiento")){
            consul = "SELECT * FROM c_tratamientos ";
        }
        if(table.equals("Estado Civil")){
            consul = "SELECT * FROM c_estadosciviles";
        }
        if(table.equals("Familiares")){
            consul = "SELECT * FROM c_familiares";
        }
        if(table.equals("Cobros")){
            consul = "SELECT * FROM cobros";
        }
        
        
        String datos[] =  new String[2];
        Statement st = null;
        ResultSet rs = null;
        try {
            st = cn.createStatement();
            rs = st.executeQuery(consul);
            while(rs.next()){
//                registros++;
                datos[0] =rs.getString(1);
                datos[1] = rs.getString(2);
            
                modelo.addRow(datos);
            }
            jTable1.setModel(modelo);
        } catch (SQLException ex) {
            Logger.getLogger(AltasMedicina.class.getName()).log(Level.SEVERE, null, ex);
        }finally{
//                    System.out.println( "cierra conexion a la base de datos" );    
                    try {
                        if(st != null) st.close();
                        if(rs != null) rs.close();
                        if(cn != null) cn.close();
//                        if(cn !=null) cn.close();
                    } catch (SQLException ex) {
                        System.err.println( ex.getMessage() );    
                    }
                }
    }
}
